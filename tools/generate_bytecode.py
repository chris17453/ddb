# This builds the BYTECODE definitions for ddb
from tpl import tpl


template=tpl("templates/bytecode_template.py")
template.add_var("vars",padding=4)
template.add_var("code",padding=4)
template.add_var("get_intermediate_code_2",padding=4)
template.add_var("get_intermediate_code_3",padding=4)
template.add_var("section_range",padding=4)

SECTION_BLOCK_START=1000
SECTION_BLOCK_INCREMENT=1000
WORD_INCREMENT =2

# All  MYSQL 8 reserverd/keywords are here for fure use, change element 3=1 to activte

words=[
 ['K_ACCESSIBLE'                   ,'ACCESSIBLE',0,]
,['K_ADD'                          ,'ADD',0,]
,['K_ALL'                          ,'ALL',0,]
,['K_ALTER'                        ,'ALTER',0,]
,['K_ANALYZE'                      ,'ANALYZE',0,]
,['K_AND'                          ,'AND',1,]
,['K_ARRAY'                        ,'ARRAY',0,]
,['K_ASC'                          ,'ASC',1,]
,['K_ASENSITIVE'                   ,'ASENSITIVE',0,]
,['K_AS'                           ,'AS',1,]
,['K_BEFORE'                       ,'BEFORE',1,]
,['K_BETWEEN'                      ,'BETWEEN',1,]
,['K_BIGINT'                       ,'BIGINT',0,]
,['K_BINARY'                       ,'BINARY',0,]
,['K_BLOB'                         ,'BLOB',0,]
,['K_BOTH'                         ,'BOTH',0,]
,['K_BY'                           ,'BY',1,]
,['K_CALL'                         ,'CALL',0,]
,['K_CASCADE'                      ,'CASCADE',0,]
,['K_CASE'                         ,'CASE',0,]
,['K_CHANGE'                       ,'CHANGE',0,]
,['K_CHARACTER'                    ,'CHARACTER',0,]
,['K_CHAR'                         ,'CHAR',0,]
,['K_CHECK'                        ,'CHECK',0,]
,['K_COLLATE'                      ,'COLLATE',0,]
,['K_COLUMN'                       ,'COLUMN',0,]
,['K_CONDITION'                    ,'CONDITION',0,]
,['K_CONSTRAINT'                   ,'CONSTRAINT',0,]
,['K_CONTINUE'                     ,'CONTINUE',0,]
,['K_CONVERT'                      ,'CONVERT',0,]
,['K_CREATE'                       ,'CREATE',1,]
,['K_CROSS'                        ,'CROSS',0,]
,['K_CUBE'                         ,'CUBE',0,]
,['K_CUME_DIST'                    ,'CUME_DIST',0,]
,['K_CURRENT_DATE'                 ,'CURRENT_DATE',0,]
,['K_CURRENT_TIME'                 ,'CURRENT_TIME',0,]
,['K_CURRENT_TIMESTAMP'            ,'CURRENT_TIMESTAMP',0,]
,['K_CURRENT_USER'                 ,'CURRENT_USER',0,]
,['K_CURSOR'                       ,'CURSOR',0,]
,['K_DATABASE'                     ,'DATABASE',1,]
,['K_DATABASES'                    ,'DATABASES',1,]
,['K_DAY_HOUR'                     ,'DAY_HOUR',0,]
,['K_DAY_MICROSECOND'              ,'DAY_MICROSECOND',0,]
,['K_DAY_MINUTE'                   ,'DAY_MINUTE',0,]
,['K_DAY_SECOND'                   ,'DAY_SECOND',0,]
,['K_DECIMAL'                      ,'DECIMAL',0,]
,['K_DECLARE'                      ,'DECLARE',0,]
,['K_DEC'                          ,'DEC',0,]
,['K_DEFAULT'                      ,'DEFAULT',0,]
,['K_DELAYED'                      ,'DELAYED',0,]
,['K_DELETE'                       ,'DELETE',0,]
,['K_DENSE_RANK'                   ,'DENSE_RANK',0,]
,['K_DESC'                         ,'DESC',1,]
,['K_DESCRIBE'                     ,'DESCRIBE',0,]
,['K_DETERMINISTIC'                ,'DETERMINISTIC',0,]
,['K_DISTINCT'                     ,'DISTINCT',1,]
,['K_DISTINCTROW'                  ,'DISTINCTROW',0,]
,['K_DIV'                          ,'DIV',0,]
,['K_DOUBLE'                       ,'DOUBLE',0,]
,['K_DROP'                         ,'DROP',1,]
,['K_DUAL'                         ,'DUAL',0,]
,['K_EACH'                         ,'EACH',0,]
,['K_ELSEIF'                       ,'ELSEIF',0,]
,['K_ELSE'                         ,'ELSE',0,]
,['K_EMPTY'                        ,'EMPTY',0,]
,['K_ENCLOSED'                     ,'ENCLOSED',0,]
,['K_ESCAPED'                      ,'ESCAPED',0,]
,['K_EXCEPT'                       ,'EXCEPT',0,]
,['K_EXISTS'                       ,'EXISTS',1,]
,['K_EXIT'                         ,'EXIT',0,]
,['K_EXPLAIN'                      ,'EXPLAIN',0,]
,['K_FALSE'                        ,'FALSE',1,]
,['K_FETCH'                        ,'FETCH',0,]
,['K_FIRST_VALUE'                  ,'FIRST_VALUE',0,]
,['K_FLOAT4'                       ,'FLOAT4',0,]
,['K_FLOAT8'                       ,'FLOAT8',0,]
,['K_FLOAT'                        ,'FLOAT',0,]
,['K_FORCE'                        ,'FORCE',0,]
,['K_FOREIGN'                      ,'FOREIGN',0,]
,['K_FOR'                          ,'FOR',0,]
,['K_FROM'                         ,'FROM',1,]
,['K_FULLTEXT'                     ,'FULLTEXT',0,]
,['K_FUNCTION'                     ,'FUNCTION',0,]
,['K_GENERATED'                    ,'GENERATED',0,]
,['K_GET'                          ,'GET',0,]
,['K_GRANT'                        ,'GRANT',0,]
,['K_GROUPING'                     ,'GROUPING',0,]
,['K_GROUP'                        ,'GROUP',1,]
,['K_GROUPS'                       ,'GROUPS',1,]
,['K_HAVING'                       ,'HAVING',1,]
,['K_HIGH_PRIORITY'                ,'HIGH_PRIORITY',0,]
,['K_HOUR_MICROSECOND'             ,'HOUR_MICROSECOND',0,]
,['K_HOUR_MINUTE'                  ,'HOUR_MINUTE',0,]
,['K_HOUR_SECOND'                  ,'HOUR_SECOND',0,]
,['K_IF'                           ,'IF',0,]
,['K_IGNORE'                       ,'IGNORE',0,]
,['K_INDEX'                        ,'INDEX',0,]
,['K_INFILE'                       ,'INFILE',0,]
,['K_INNER'                        ,'INNER',0,]
,['K_INOUT'                        ,'INOUT',0,]
,['K_IN'                           ,'IN',1,]
,['K_INSENSITIVE'                  ,'INSENSITIVE',0,]
,['K_INSERT'                       ,'INSERT',1,]
,['K_INT1'                         ,'INT1',0,]
,['K_INT2'                         ,'INT2',0,]
,['K_INT3'                         ,'INT3',0,]
,['K_INT4'                         ,'INT4',0,]
,['K_INT8'                         ,'INT8',0,]
,['K_INTEGER'                      ,'INTEGER',0,]
,['K_INTERVAL'                     ,'INTERVAL',0,]
,['K_INTO'                         ,'INTO',1,]
,['K_INT'                          ,'INT',0,]
,['K_IO_AFTER_GTIDS'               ,'IO_AFTER_GTIDS',0,]
,['K_IO_BEFORE_GTIDS'              ,'IO_BEFORE_GTIDS',0,]
,['K_IS'                           ,'IS',1,]
,['K_ITERATE'                      ,'ITERATE',0,]
,['K_JOIN'                         ,'JOIN',1,]
,['K_JSON_TABLE'                   ,'JSON_TABLE',0,]
,['K_KEY'                          ,'KEY',0,]
,['K_KEYS'                         ,'KEYS',0,]
,['K_KILL'                         ,'KILL',0,]
,['K_LAG'                          ,'LAG',0,]
,['K_LAST_VALUE'                   ,'LAST_VALUE',0,]
,['K_LATERAL'                      ,'LATERAL',0,]
,['K_LEADING'                      ,'LEADING',0,]
,['K_LEAD'                         ,'LEAD',0,]
,['K_LEAVE'                        ,'LEAVE',0,]
,['K_LEFT'                         ,'LEFT',1,]
,['K_LIKE'                         ,'LIKE',1,]
,['K_LIMIT'                        ,'LIMIT',1,]
,['K_LINEAR'                       ,'LINEAR',0,]
,['K_LINES'                        ,'LINES',0,]
,['K_LOAD'                         ,'LOAD',0,]
,['K_LOCALTIME'                    ,'LOCALTIME',0,]
,['K_LOCALTIMESTAMP'               ,'LOCALTIMESTAMP',0,]
,['K_LOCK'                         ,'LOCK',0,]
,['K_LONGBLOB'                     ,'LONGBLOB',0,]
,['K_LONG'                         ,'LONG',0,]
,['K_LONGTEXT'                     ,'LONGTEXT',0,]
,['K_LOOP'                         ,'LOOP',0,]
,['K_LOW_PRIORITY'                 ,'LOW_PRIORITY',0,]
,['K_MASTER_BIND'                  ,'MASTER_BIND',0,]
,['K_MASTER_SSL_VERIFY_SERVER_CERT','MASTER_SSL_VERIFY_SERVER_CERT',0,]
,['K_MATCH'                        ,'MATCH',0,]
,['K_MAXVALUE'                     ,'MAXVALUE',0,]
,['K_MEDIUMBLOB'                   ,'MEDIUMBLOB',0,]
,['K_MEDIUMINT'                    ,'MEDIUMINT',0,]
,['K_MEDIUMTEXT'                   ,'MEDIUMTEXT',0,]
,['K_MEMBER'                       ,'MEMBER',0,]
,['K_MIDDLEINT'                    ,'MIDDLEINT',0,]
,['K_MINUTE_MICROSECOND'           ,'MINUTE_MICROSECOND',0,]
,['K_MINUTE_SECOND'                ,'MINUTE_SECOND',0,]
,['K_MODIFIES'                     ,'MODIFIES',0,]
,['K_MOD'                          ,'MOD',1,]
,['K_NATURAL'                      ,'NATURAL',0,]
,['K_NOT'                          ,'NOT',1,]
,['K_NO_WRITE_TO_BINLOG'           ,'NO_WRITE_TO_BINLOG',0,]
,['K_NTH_VALUE'                    ,'NTH_VALUE',0,]
,['K_NTILE'                        ,'NTILE',0,]
,['K_NULL'                         ,'NULL',1,]
,['K_NUMERIC'                      ,'NUMERIC',0,]
,['K_OF'                           ,'OF',0,]
,['K_ON'                           ,'ON',1,]
,['K_OPTIMIZE'                     ,'OPTIMIZE',0,]
,['K_OPTIMIZER_COSTS'              ,'OPTIMIZER_COSTS',0,]
,['K_OPTIONALLY'                   ,'OPTIONALLY',0,]
,['K_OPTION'                       ,'OPTION',0,]
,['K_ORDER'                        ,'ORDER',1,]
,['K_OR'                           ,'OR',1,]
,['K_OUTER'                        ,'OUTER',0,]
,['K_OUTFILE'                      ,'OUTFILE',0,]
,['K_OUT'                          ,'OUT',0,]
,['K_OVER'                         ,'OVER',0,]
,['K_PARTITION'                    ,'PARTITION',0,]
,['K_PERCENT_RANK'                 ,'PERCENT_RANK',0,]
,['K_PRECISION'                    ,'PRECISION',0,]
,['K_PRIMARY'                      ,'PRIMARY',0,]
,['K_PROCEDURE'                    ,'PROCEDURE',0,]
,['K_PURGE'                        ,'PURGE',0,]
,['K_RANGE'                        ,'RANGE',0,]
,['K_RANK'                         ,'RANK',0,]
,['K_READ'                         ,'READ',0,]
,['K_READS'                        ,'READS',0,]
,['K_READ_WRITE'                   ,'READ_WRITE',0,]
,['K_REAL'                         ,'REAL',0,]
,['K_RECURSIVE'                    ,'RECURSIVE',0,]
,['K_REFERENCES'                   ,'REFERENCES',0,]
,['K_REGEXP'                       ,'REGEXP',0,]
,['K_RELEASE'                      ,'RELEASE',0,]
,['K_RENAME'                       ,'RENAME',0,]
,['K_REPEAT'                       ,'REPEAT',0,]
,['K_REPLACE'                      ,'REPLACE',0,]
,['K_REQUIRE'                      ,'REQUIRE',0,]
,['K_RESIGNAL'                     ,'RESIGNAL',0,]
,['K_RESTRICT'                     ,'RESTRICT',0,]
,['K_RETURN'                       ,'RETURN',0,]
,['K_REVOKE'                       ,'REVOKE',0,]
,['K_RIGHT'                        ,'RIGHT',1,]
,['K_RLIKE'                        ,'RLIKE',0,]
,['K_ROW_NUMBER'                   ,'ROW_NUMBER',0,]
,['K_ROW'                          ,'ROW',0,]
,['K_ROWS'                         ,'ROWS',0,]
,['K_SCHEMA'                       ,'SCHEMA',0,]
,['K_SCHEMAS'                      ,'SCHEMAS',0,]
,['K_SECOND_MICROSECOND'           ,'SECOND_MICROSECOND',0,]
,['K_SELECT'                       ,'SELECT',1,]
,['K_SENSITIVE'                    ,'SENSITIVE',0,]
,['K_SEPARATOR'                    ,'SEPARATOR',0,]
,['K_SET'                          ,'SET',1,]
,['K_SHOW'                         ,'SHOW',1,]
,['K_SIGNAL'                       ,'SIGNAL',0,]
,['K_SMALLINT'                     ,'SMALLINT',0,]
,['K_SPATIAL'                      ,'SPATIAL',0,]
,['K_SPECIFIC'                     ,'SPECIFIC',0,]
,['K_SQL_BIG_RESULT'               ,'SQL_BIG_RESULT',0,]
,['K_SQL_CALC_FOUND_ROWS'          ,'SQL_CALC_FOUND_ROWS',0,]
,['K_SQLEXCEPTION'                 ,'SQLEXCEPTION',0,]
,['K_SQL'                          ,'SQL',0,]
,['K_SQL_SMALL_RESULT'             ,'SQL_SMALL_RESULT',0,]
,['K_SQLSTATE'                     ,'SQLSTATE',0,]
,['K_SQLWARNING'                   ,'SQLWARNING',0,]
,['K_SSL'                          ,'SSL',0,]
,['K_STARTING'                     ,'STARTING',0,]
,['K_STORED'                       ,'STORED',0,]
,['K_STRAIGHT_JOIN'                ,'STRAIGHT_JOIN',0,]
,['K_SYSTEM'                       ,'SYSTEM',0,]
,['K_TABLE'                        ,'TABLE',1,]
,['K_TERMINATED'                   ,'TERMINATED',0,]
,['K_THEN'                         ,'THEN',0,]
,['K_TINYBLOB'                     ,'TINYBLOB',0,]
,['K_TINYINT'                      ,'TINYINT',0,]
,['K_TINYTEXT'                     ,'TINYTEXT',0,]
,['K_TO'                           ,'TO',0,]
,['K_TRAILING'                     ,'TRAILING',0,]
,['K_TRIGGER'                      ,'TRIGGER',0,]
,['K_TRUE'                         ,'TRUE',1,]
,['K_UNDO'                         ,'UNDO',0,]
,['K_UNION'                        ,'UNION',1,]
,['K_UNIQUE'                       ,'UNIQUE',1,]
,['K_UNLOCK'                       ,'UNLOCK',0,]
,['K_UNSIGNED'                     ,'UNSIGNED',0,]
,['K_UPDATE'                       ,'UPDATE',1,]
,['K_USAGE'                        ,'USAGE',0,]
,['K_USE'                          ,'USE',0,]
,['K_USING'                        ,'USING',0,]
,['K_UTC_DATE'                     ,'UTC_DATE',0,]
,['K_UTC_TIME'                     ,'UTC_TIME',0,]
,['K_UTC_TIMESTAMP'                ,'UTC_TIMESTAMP',0,]
,['K_VALUES'                       ,'VALUES',1,]
,['K_VARBINARY'                    ,'VARBINARY',0,]
,['K_VARCHARACTER'                 ,'VARCHARACTER',0,]
,['K_VARCHAR'                      ,'VARCHAR',0,]
,['K_VARYING'                      ,'VARYING',0,]
,['K_VIRTUAL'                      ,'VIRTUAL',0,]
,['K_WHEN'                         ,'WHEN',0,]
,['K_WHERE'                        ,'WHERE',1,]
,['K_WHILE'                        ,'WHILE',0,]
,['K_WINDOW'                       ,'WINDOW',0,]
,['K_WITH'                         ,'WITH',0,]
,['K_WRITE'                        ,'WRITE',0,]
,['K_XOR'                          ,'XOR',1,]
,['K_YEAR_MONTH'                   ,'YEAR_MONTH',0,]
,['K_ZEROFILL'                     ,'ZEROFILL',0,]
,['R_ACCOUNT'                      ,'ACCOUNT',0,]
,['R_ACTION'                       ,'ACTION',0,]
,['R_ACTIVE'                       ,'ACTIVE',0,]
,['R_ADMIN'                        ,'ADMIN',0,]
,['R_AFTER'                        ,'AFTER',0,]
,['R_AGAINST'                      ,'AGAINST',0,]
,['R_AGGREGATE'                    ,'AGGREGATE',0,]
,['R_ALGORITHM'                    ,'ALGORITHM',0,]
,['R_ALWAYS'                       ,'ALWAYS',0,]
,['R_ANALYSE'                      ,'ANALYSE',0,]
,['R_ANY'                          ,'ANY',0,]
,['R_ASCII'                        ,'ASCII',0,]
,['R_AT'                           ,'AT',0,]
,['R_AUTOEXTEND_SIZE'              ,'AUTOEXTEND_SIZE',0,]
,['R_AUTO_INCREMENT'               ,'AUTO_INCREMENT',0,]
,['R_AVG'                          ,'AVG',0,]
,['R_AVG_ROW_LENGTH'               ,'AVG_ROW_LENGTH',0,]
,['R_BACKUP'                       ,'BACKUP',0,]
,['R_BEGIN'                        ,'BEGIN',0,]
,['R_BINLOG'                       ,'BINLOG',0,]
,['R_BIT'                          ,'BIT',0,]
,['R_BLOCK'                        ,'BLOCK',0,]
,['R_BOOL'                         ,'BOOL',0,]
,['R_BOOLEAN'                      ,'BOOLEAN',0,]
,['R_BTREE'                        ,'BTREE',0,]
,['R_BUCKETS'                      ,'BUCKETS',0,]
,['R_BYTE'                         ,'BYTE',0,]
,['R_CACHE'                        ,'CACHE',0,]
,['R_CASCADED'                     ,'CASCADED',0,]
,['R_CATALOG_NAME'                 ,'CATALOG_NAME',0,]
,['R_CHAIN'                        ,'CHAIN',0,]
,['R_CHANGED'                      ,'CHANGED',0,]
,['R_CHANNEL'                      ,'CHANNEL',0,]
,['R_CHARSET'                      ,'CHARSET',0,]
,['R_CHECKSUM'                     ,'CHECKSUM',0,]
,['R_CIPHER'                       ,'CIPHER',0,]
,['R_CLASS_ORIGIN'                 ,'CLASS_ORIGIN',0,]
,['R_CLIENT'                       ,'CLIENT',0,]
,['R_CLONE'                        ,'CLONE',0,]
,['R_CLOSE'                        ,'CLOSE',0,]
,['R_COALESCE'                     ,'COALESCE',0,]
,['R_CODE'                         ,'CODE',0,]
,['R_COLLATION'                    ,'COLLATION',0,]
,['R_COLUMN_FORMAT'                ,'COLUMN_FORMAT',0,]
,['R_COLUMN_NAME'                  ,'COLUMN_NAME',0,]
,['R_COLUMNS'                      ,'COLUMNS',0,]
,['R_COMMENT'                      ,'COMMENT',0,]
,['R_COMMIT'                       ,'COMMIT',0,]
,['R_COMMITTED'                    ,'COMMITTED',0,]
,['R_COMPACT'                      ,'COMPACT',0,]
,['R_COMPLETION'                   ,'COMPLETION',0,]
,['R_COMPONENT'                    ,'COMPONENT',0,]
,['R_COMPRESSED'                   ,'COMPRESSED',0,]
,['R_COMPRESSION'                  ,'COMPRESSION',0,]
,['R_CONCURRENT'                   ,'CONCURRENT',0,]
,['R_CONNECTION'                   ,'CONNECTION',0,]
,['R_CONSISTENT'                   ,'CONSISTENT',0,]
,['R_CONSTRAINT_CATALOG'           ,'CONSTRAINT_CATALOG',0,]
,['R_CONSTRAINT_NAME'              ,'CONSTRAINT_NAME',0,]
,['R_CONSTRAINT_SCHEMA'            ,'CONSTRAINT_SCHEMA',0,]
,['R_CONTAINS'                     ,'CONTAINS',0,]
,['R_CONTEXT'                      ,'CONTEXT',0,]
,['R_CPU'                          ,'CPU',0,]
,['R_CURRENT'                      ,'CURRENT',0,]
,['R_CURSOR_NAME'                  ,'CURSOR_NAME',0,]
,['R_DATA'                         ,'DATA',0,]
,['R_DATAFILE'                     ,'DATAFILE',0,]
,['R_DATE'                         ,'DATE',1,]
,['R_DATETIME'                     ,'DATETIME',1,]
,['R_DAY'                          ,'DAY',0,]
,['R_DEALLOCATE'                   ,'DEALLOCATE',0,]
,['R_DEFAULT_AUTH'                 ,'DEFAULT_AUTH',0,]
,['R_DEFINER'                      ,'DEFINER',0,]
,['R_DEFINITION'                   ,'DEFINITION',0,]
,['R_DELAY_KEY_WRITE'              ,'DELAY_KEY_WRITE',0,]
,['R_DESCRIPTION'                  ,'DESCRIPTION',0,]
,['R_DES_KEY_FILE'                 ,'DES_KEY_FILE',0,]
,['R_DIAGNOSTICS'                  ,'DIAGNOSTICS',0,]
,['R_DIRECTORY'                    ,'DIRECTORY',0,]
,['R_DISABLE'                      ,'DISABLE',0,]
,['R_DISCARD'                      ,'DISCARD',0,]
,['R_DISK'                         ,'DISK',0,]
,['R_DO'                           ,'DO',0,]
,['R_DUMPFILE'                     ,'DUMPFILE',0,]
,['R_DUPLICATE'                    ,'DUPLICATE',0,]
,['R_DYNAMIC'                      ,'DYNAMIC',0,]
,['R_ENABLE'                       ,'ENABLE',0,]
,['R_ENCRYPTION'                   ,'ENCRYPTION',0,]
,['R_END'                          ,'END',0,]
,['R_ENDS'                         ,'ENDS',0,]
,['R_ENFORCED'                     ,'ENFORCED',0,]
,['R_ENGINE'                       ,'ENGINE',0,]
,['R_ENGINES'                      ,'ENGINES',0,]
,['R_ENUM'                         ,'ENUM',0,]
,['R_ERROR'                        ,'ERROR',0,]
,['R_ERRORS'                       ,'ERRORS',0,]
,['R_ESCAPE'                       ,'ESCAPE',0,]
,['R_EVENT'                        ,'EVENT',0,]
,['R_EVENTS'                       ,'EVENTS',0,]
,['R_EVERY'                        ,'EVERY',0,]
,['R_EXCHANGE'                     ,'EXCHANGE',0,]
,['R_EXCLUDE'                      ,'EXCLUDE',0,]
,['R_EXECUTE'                      ,'EXECUTE',0,]
,['R_EXPANSION'                    ,'EXPANSION',0,]
,['R_EXPIRE'                       ,'EXPIRE',0,]
,['R_EXPORT'                       ,'EXPORT',0,]
,['R_EXTENDED'                     ,'EXTENDED',0,]
,['R_EXTENT_SIZE'                  ,'EXTENT_SIZE',0,]
,['R_FAST'                         ,'FAST',0,]
,['R_FAULTS'                       ,'FAULTS',0,]
,['R_FIELDS'                       ,'FIELDS',0,]
,['R_FILE'                         ,'FILE',0,]
,['R_FILE_BLOCK_SIZE'              ,'FILE_BLOCK_SIZE',0,]
,['R_FILTER'                       ,'FILTER',0,]
,['R_FIRST'                        ,'FIRST',0,]
,['R_FIXED'                        ,'FIXED',0,]
,['R_FLUSH'                        ,'FLUSH',0,]
,['R_FOLLOWING'                    ,'FOLLOWING',0,]
,['R_FOLLOWS'                      ,'FOLLOWS',0,]
,['R_FORMAT'                       ,'FORMAT',0,]
,['R_FOUND'                        ,'FOUND',0,]
,['R_FULL'                         ,'FULL',1,]
,['R_GENERAL'                      ,'GENERAL',0,]
,['R_GEOMCOLLECTION'               ,'GEOMCOLLECTION',0,]
,['R_GEOMETRY'                     ,'GEOMETRY',0,]
,['R_GEOMETRYCOLLECTION'           ,'GEOMETRYCOLLECTION',0,]
,['R_GET_FORMAT'                   ,'GET_FORMAT',0,]
,['R_GET_MASTER_PUBLIC_KEY'        ,'GET_MASTER_PUBLIC_KEY',0,]
,['R_GLOBAL'                       ,'GLOBAL',0,]
,['R_GRANTS'                       ,'GRANTS',0,]
,['R_GROUP_REPLICATION'            ,'GROUP_REPLICATION',0,]
,['R_HANDLER'                      ,'HANDLER',0,]
,['R_HASH'                         ,'HASH',0,]
,['R_HELP'                         ,'HELP',0,]
,['R_HISTOGRAM'                    ,'HISTOGRAM',0,]
,['R_HISTORY'                      ,'HISTORY',0,]
,['R_HOST'                         ,'HOST',0,]
,['R_HOSTS'                        ,'HOSTS',0,]
,['R_HOUR'                         ,'HOUR',0,]
,['R_IDENTIFIED'                   ,'IDENTIFIED',0,]
,['R_IGNORE_SERVER_IDS'            ,'IGNORE_SERVER_IDS',0,]
,['R_IMPORT'                       ,'IMPORT',0,]
,['R_INACTIVE'                     ,'INACTIVE',0,]
,['R_INDEXES'                      ,'INDEXES',0,]
,['R_INITIAL_SIZE'                 ,'INITIAL_SIZE',0,]
,['R_INSERT_METHOD'                ,'INSERT_METHOD',0,]
,['R_INSTALL'                      ,'INSTALL',0,]
,['R_INSTANCE'                     ,'INSTANCE',0,]
,['R_INVISIBLE'                    ,'INVISIBLE',0,]
,['R_INVOKER'                      ,'INVOKER',0,]
,['R_IO'                           ,'IO',0,]
,['R_IO_THREAD'                    ,'IO_THREAD',0,]
,['R_IPC'                          ,'IPC',0,]
,['R_ISOLATION'                    ,'ISOLATION',0,]
,['R_ISSUER'                       ,'ISSUER',0,]
,['R_JSON'                         ,'JSON',0,]
,['R_KEY_BLOCK_SIZE'               ,'KEY_BLOCK_SIZE',0,]
,['R_LANGUAGE'                     ,'LANGUAGE',0,]
,['R_LAST'                         ,'LAST',0,]
,['R_LEAVES'                       ,'LEAVES',0,]
,['R_LESS'                         ,'LESS',0,]
,['R_LEVEL'                        ,'LEVEL',0,]
,['R_LINESTRING'                   ,'LINESTRING',0,]
,['R_LIST'                         ,'LIST',0,]
,['R_LOCAL'                        ,'LOCAL',0,]
,['R_LOCKED'                       ,'LOCKED',0,]
,['R_LOCKS'                        ,'LOCKS',0,]
,['R_LOGFILE'                      ,'LOGFILE',0,]
,['R_LOGS'                         ,'LOGS',0,]
,['R_MASTER'                       ,'MASTER',0,]
,['R_MASTER_AUTO_POSITION'         ,'MASTER_AUTO_POSITION',0,]
,['R_MASTER_COMPRESSION_ALGORITHMS','MASTER_COMPRESSION_ALGORITHMS',0,]
,['R_MASTER_CONNECT_RETRY'         ,'MASTER_CONNECT_RETRY',0,]
,['R_MASTER_DELAY'                 ,'MASTER_DELAY',0,]
,['R_MASTER_HEARTBEAT_PERIOD'      ,'MASTER_HEARTBEAT_PERIOD',0,]
,['R_MASTER_HOST'                  ,'MASTER_HOST',0,]
,['R_MASTER_LOG_FILE'              ,'MASTER_LOG_FILE',0,]
,['R_MASTER_LOG_POS'               ,'MASTER_LOG_POS',0,]
,['R_MASTER_PASSWORD'              ,'MASTER_PASSWORD',0,]
,['R_MASTER_PORT'                  ,'MASTER_PORT',0,]
,['R_MASTER_PUBLIC_KEY_PATH'       ,'MASTER_PUBLIC_KEY_PATH',0,]
,['R_MASTER_RETRY_COUNT'           ,'MASTER_RETRY_COUNT',0,]
,['R_MASTER_SERVER_ID'             ,'MASTER_SERVER_ID',0,]
,['R_MASTER_SSL'                   ,'MASTER_SSL',0,]
,['R_MASTER_SSL_CA'                ,'MASTER_SSL_CA',0,]
,['R_MASTER_SSL_CAPATH'            ,'MASTER_SSL_CAPATH',0,]
,['R_MASTER_SSL_CERT'              ,'MASTER_SSL_CERT',0,]
,['R_MASTER_SSL_CIPHER'            ,'MASTER_SSL_CIPHER',0,]
,['R_MASTER_SSL_CRL'               ,'MASTER_SSL_CRL',0,]
,['R_MASTER_SSL_CRLPATH'           ,'MASTER_SSL_CRLPATH',0,]
,['R_MASTER_SSL_KEY'               ,'MASTER_SSL_KEY',0,]
,['R_MASTER_TLS_CIPHERSUITES'      ,'MASTER_TLS_CIPHERSUITES',0,]
,['R_MASTER_TLS_VERSION'           ,'MASTER_TLS_VERSION',0,]
,['R_MASTER_USER'                  ,'MASTER_USER',0,]
,['R_MASTER_ZSTD_COMPRESSION_LEVEL','MASTER_ZSTD_COMPRESSION_LEVEL',0,]
,['R_MAX_CONNECTIONS_PER_HOUR'     ,'MAX_CONNECTIONS_PER_HOUR',0,]
,['R_MAX_QUERIES_PER_HOUR'         ,'MAX_QUERIES_PER_HOUR',0,]
,['R_MAX_ROWS'                     ,'MAX_ROWS',0,]
,['R_MAX_SIZE'                     ,'MAX_SIZE',0,]
,['R_MAX_UPDATES_PER_HOUR'         ,'MAX_UPDATES_PER_HOUR',0,]
,['R_MAX_USER_CONNECTIONS'         ,'MAX_USER_CONNECTIONS',0,]
,['R_MEDIUM'                       ,'MEDIUM',0,]
,['R_MEMORY'                       ,'MEMORY',0,]
,['R_MERGE'                        ,'MERGE',0,]
,['R_MESSAGE_TEXT'                 ,'MESSAGE_TEXT',0,]
,['R_MICROSECOND'                  ,'MICROSECOND',0,]
,['R_MIGRATE'                      ,'MIGRATE',0,]
,['R_MIN_ROWS'                     ,'MIN_ROWS',0,]
,['R_MINUTE'                       ,'MINUTE',0,]
,['R_MODE'                         ,'MODE',0,]
,['R_MODIFY'                       ,'MODIFY',0,]
,['R_MONTH'                        ,'MONTH',0,]
,['R_MULTILINESTRING'              ,'MULTILINESTRING',0,]
,['R_MULTIPOINT'                   ,'MULTIPOINT',0,]
,['R_MULTIPOLYGON'                 ,'MULTIPOLYGON',0,]
,['R_MUTEX'                        ,'MUTEX',0,]
,['R_MYSQL_ERRNO'                  ,'MYSQL_ERRNO',0,]
,['R_NAME'                         ,'NAME',0,]
,['R_NAMES'                        ,'NAMES',0,]
,['R_NATIONAL'                     ,'NATIONAL',0,]
,['R_NCHAR'                        ,'NCHAR',0,]
,['R_NDB'                          ,'NDB',0,]
,['R_NDBCLUSTER'                   ,'NDBCLUSTER',0,]
,['R_NESTED'                       ,'NESTED',0,]
,['R_NETWORK_NAMESPACE'            ,'NETWORK_NAMESPACE',0,]
,['R_NEVER'                        ,'NEVER',0,]
,['R_NEW'                          ,'NEW',0,]
,['R_NEXT'                         ,'NEXT',0,]
,['R_NO'                           ,'NO',0,]
,['R_NODEGROUP'                    ,'NODEGROUP',0,]
,['R_NONE'                         ,'NONE',0,]
,['R_NO_WAIT'                      ,'NO_WAIT',0,]
,['R_NOWAIT'                       ,'NOWAIT',0,]
,['R_NULLS'                        ,'NULLS',0,]
,['R_NUMBER'                       ,'NUMBER',0,]
,['R_NVARCHAR'                     ,'NVARCHAR',0,]
,['R_OFFSET'                       ,'OFFSET',0,]
,['R_OJ'                           ,'OJ',0,]
,['R_OLD'                          ,'OLD',0,]
,['R_ONE'                          ,'ONE',0,]
,['R_ONLY'                         ,'ONLY',0,]
,['R_OPEN'                         ,'OPEN',0,]
,['R_OPTIONAL'                     ,'OPTIONAL',0,]
,['R_OPTIONS'                      ,'OPTIONS',0,]
,['R_ORDINALITY'                   ,'ORDINALITY',0,]
,['R_ORGANIZATION'                 ,'ORGANIZATION',0,]
,['R_OTHERS'                       ,'OTHERS',0,]
,['R_OWNER'                        ,'OWNER',0,]
,['R_PACK_KEYS'                    ,'PACK_KEYS',0,]
,['R_PAGE'                         ,'PAGE',0,]
,['R_PARSER'                       ,'PARSER',0,]
,['R_PARTIAL'                      ,'PARTIAL',0,]
,['R_PARTITIONING'                 ,'PARTITIONING',0,]
,['R_PARTITIONS'                   ,'PARTITIONS',0,]
,['R_PASSWORD'                     ,'PASSWORD',0,]
,['R_PATH'                         ,'PATH',0,]
,['R_PERSIST'                      ,'PERSIST',0,]
,['R_PERSIST_ONLY'                 ,'PERSIST_ONLY',0,]
,['R_PHASE'                        ,'PHASE',0,]
,['R_PLUGIN'                       ,'PLUGIN',0,]
,['R_PLUGIN_DIR'                   ,'PLUGIN_DIR',0,]
,['R_PLUGINS'                      ,'PLUGINS',0,]
,['R_POINT'                        ,'POINT',0,]
,['R_POLYGON'                      ,'POLYGON',0,]
,['R_PORT'                         ,'PORT',0,]
,['R_PRECEDES'                     ,'PRECEDES',0,]
,['R_PRECEDING'                    ,'PRECEDING',0,]
,['R_PREPARE'                      ,'PREPARE',0,]
,['R_PRESERVE'                     ,'PRESERVE',0,]
,['R_PREV'                         ,'PREV',0,]
,['R_PRIVILEGE_CHECKS_USER'        ,'PRIVILEGE_CHECKS_USER',0,]
,['R_PRIVILEGES'                   ,'PRIVILEGES',0,]
,['R_PROCESS'                      ,'PROCESS',0,]
,['R_PROCESSLIST'                  ,'PROCESSLIST',0,]
,['R_PROFILE'                      ,'PROFILE',0,]
,['R_PROFILES'                     ,'PROFILES',0,]
,['R_PROXY'                        ,'PROXY',0,]
,['R_QUARTER'                      ,'QUARTER',0,]
,['R_QUERY'                        ,'QUERY',0,]
,['R_QUICK'                        ,'QUICK',0,]
,['R_RANDOM'                       ,'RANDOM',0,]
,['R_READ_ONLY'                    ,'READ_ONLY',0,]
,['R_REBUILD'                      ,'REBUILD',0,]
,['R_RECOVER'                      ,'RECOVER',0,]
,['R_REDO_BUFFER_SIZE'             ,'REDO_BUFFER_SIZE',0,]
,['R_REDOFILE'                     ,'REDOFILE',0,]
,['R_REDUNDANT'                    ,'REDUNDANT',0,]
,['R_REFERENCE'                    ,'REFERENCE',0,]
,['R_RELAY'                        ,'RELAY',0,]
,['R_RELAYLOG'                     ,'RELAYLOG',0,]
,['R_RELAY_LOG_FILE'               ,'RELAY_LOG_FILE',0,]
,['R_RELAY_LOG_POS'                ,'RELAY_LOG_POS',0,]
,['R_RELAY_THREAD'                 ,'RELAY_THREAD',0,]
,['R_RELOAD'                       ,'RELOAD',0,]
,['R_REMOTE'                       ,'REMOTE',0,]
,['R_REMOVE'                       ,'REMOVE',0,]
,['R_REORGANIZE'                   ,'REORGANIZE',0,]
,['R_REPAIR'                       ,'REPAIR',0,]
,['R_REPEATABLE'                   ,'REPEATABLE',0,]
,['R_REPLICATE_DO_DB'              ,'REPLICATE_DO_DB',0,]
,['R_REPLICATE_DO_TABLE'           ,'REPLICATE_DO_TABLE',0,]
,['R_REPLICATE_IGNORE_DB'          ,'REPLICATE_IGNORE_DB',0,]
,['R_REPLICATE_IGNORE_TABLE'       ,'REPLICATE_IGNORE_TABLE',0,]
,['R_REPLICATE_REWRITE_DB'         ,'REPLICATE_REWRITE_DB',0,]
,['R_REPLICATE_WILD_DO_TABLE'      ,'REPLICATE_WILD_DO_TABLE',0,]
,['R_REPLICATE_WILD_IGNORE_TABLE'  ,'REPLICATE_WILD_IGNORE_TABLE',0,]
,['R_REPLICATION'                  ,'REPLICATION',0,]
,['R_REQUIRE_ROW_FORMAT'           ,'REQUIRE_ROW_FORMAT',0,]
,['R_RESET'                        ,'RESET',0,]
,['R_RESOURCE'                     ,'RESOURCE',0,]
,['R_RESPECT'                      ,'RESPECT',0,]
,['R_RESTART'                      ,'RESTART',0,]
,['R_RESTORE'                      ,'RESTORE',0,]
,['R_RESUME'                       ,'RESUME',0,]
,['R_RETAIN'                       ,'RETAIN',0,]
,['R_RETURNED_SQLSTATE'            ,'RETURNED_SQLSTATE',0,]
,['R_RETURNS'                      ,'RETURNS',0,]
,['R_REUSE'                        ,'REUSE',0,]
,['R_REVERSE'                      ,'REVERSE',0,]
,['R_ROLE'                         ,'ROLE',0,]
,['R_ROLLBACK'                     ,'ROLLBACK',0,]
,['R_ROLLUP'                       ,'ROLLUP',0,]
,['R_ROTATE'                       ,'ROTATE',0,]
,['R_ROUTINE'                      ,'ROUTINE',0,]
,['R_ROW_COUNT'                    ,'ROW_COUNT',0,]
,['R_ROW_FORMAT'                   ,'ROW_FORMAT',0,]
,['R_RTREE'                        ,'RTREE',0,]
,['R_SAVEPOINT'                    ,'SAVEPOINT',0,]
,['R_SCHEDULE'                     ,'SCHEDULE',0,]
,['R_SCHEMA_NAME'                  ,'SCHEMA_NAME',0,]
,['R_SECOND'                       ,'SECOND',0,]
,['R_SECONDARY'                    ,'SECONDARY',0,]
,['R_SECONDARY_ENGINE'             ,'SECONDARY_ENGINE',0,]
,['R_SECONDARY_LOAD'               ,'SECONDARY_LOAD',0,]
,['R_SECONDARY_UNLOAD'             ,'SECONDARY_UNLOAD',0,]
,['R_SECURITY'                     ,'SECURITY',0,]
,['R_SERIAL'                       ,'SERIAL',0,]
,['R_SERIALIZABLE'                 ,'SERIALIZABLE',0,]
,['R_SERVER'                       ,'SERVER',0,]
,['R_SESSION'                      ,'SESSION',0,]
,['R_SHARE'                        ,'SHARE',0,]
,['R_SHUTDOWN'                     ,'SHUTDOWN',0,]
,['R_SIGNED'                       ,'SIGNED',0,]
,['R_SIMPLE'                       ,'SIMPLE',0,]
,['R_SKIP'                         ,'SKIP',0,]
,['R_SLAVE'                        ,'SLAVE',0,]
,['R_SLOW'                         ,'SLOW',0,]
,['R_SNAPSHOT'                     ,'SNAPSHOT',0,]
,['R_SOCKET'                       ,'SOCKET',0,]
,['R_SOME'                         ,'SOME',0,]
,['R_SONAME'                       ,'SONAME',0,]
,['R_SOUNDS'                       ,'SOUNDS',0,]
,['R_SOURCE'                       ,'SOURCE',0,]
,['R_SQL_AFTER_GTIDS'              ,'SQL_AFTER_GTIDS',0,]
,['R_SQL_AFTER_MTS_GAPS'           ,'SQL_AFTER_MTS_GAPS',0,]
,['R_SQL_BEFORE_GTIDS'             ,'SQL_BEFORE_GTIDS',0,]
,['R_SQL_BUFFER_RESULT'            ,'SQL_BUFFER_RESULT',0,]
,['R_SQL_CACHE'                    ,'SQL_CACHE',0,]
,['R_SQL_NO_CACHE'                 ,'SQL_NO_CACHE',0,]
,['R_SQL_THREAD'                   ,'SQL_THREAD',0,]
,['R_SQL_TSI_DAY'                  ,'SQL_TSI_DAY',0,]
,['R_SQL_TSI_HOUR'                 ,'SQL_TSI_HOUR',0,]
,['R_SQL_TSI_MINUTE'               ,'SQL_TSI_MINUTE',0,]
,['R_SQL_TSI_MONTH'                ,'SQL_TSI_MONTH',0,]
,['R_SQL_TSI_QUARTER'              ,'SQL_TSI_QUARTER',0,]
,['R_SQL_TSI_SECOND'               ,'SQL_TSI_SECOND',0,]
,['R_SQL_TSI_WEEK'                 ,'SQL_TSI_WEEK',0,]
,['R_SQL_TSI_YEAR'                 ,'SQL_TSI_YEAR',0,]
,['R_SRID'                         ,'SRID',0,]
,['R_STACKED'                      ,'STACKED',0,]
,['R_START'                        ,'START',0,]
,['R_STARTS'                       ,'STARTS',0,]
,['R_STATS_AUTO_RECALC'            ,'STATS_AUTO_RECALC',0,]
,['R_STATS_PERSISTENT'             ,'STATS_PERSISTENT',0,]
,['R_STATS_SAMPLE_PAGES'           ,'STATS_SAMPLE_PAGES',0,]
,['R_STATUS'                       ,'STATUS',0,]
,['R_STOP'                         ,'STOP',0,]
,['R_STORAGE'                      ,'STORAGE',0,]
,['R_STRING'                       ,'STRING',0,]
,['R_SUBCLASS_ORIGIN'              ,'SUBCLASS_ORIGIN',0,]
,['R_SUBJECT'                      ,'SUBJECT',0,]
,['R_SUBPARTITION'                 ,'SUBPARTITION',0,]
,['R_SUBPARTITIONS'                ,'SUBPARTITIONS',0,]
,['R_SUPER'                        ,'SUPER',0,]
,['R_SUSPEND'                      ,'SUSPEND',0,]
,['R_SWAPS'                        ,'SWAPS',0,]
,['R_SWITCHES'                     ,'SWITCHES',0,]
,['R_TABLE_CHECKSUM'               ,'TABLE_CHECKSUM',0,]
,['R_TABLE_NAME'                   ,'TABLE_NAME',0,]
,['R_TABLES'                       ,'TABLES',0,]
,['R_TABLESPACE'                   ,'TABLESPACE',0,]
,['R_TEMPORARY'                    ,'TEMPORARY',0,]
,['R_TEMPTABLE'                    ,'TEMPTABLE',0,]
,['R_TEXT'                         ,'TEXT',0,]
,['R_THAN'                         ,'THAN',0,]
,['R_THREAD_PRIORITY'              ,'THREAD_PRIORITY',0,]
,['R_TIES'                         ,'TIES',0,]
,['R_TIME'                         ,'TIME',0,]
,['R_TIMESTAMP'                    ,'TIMESTAMP',0,]
,['R_TIMESTAMPADD'                 ,'TIMESTAMPADD',0,]
,['R_TIMESTAMPDIFF'                ,'TIMESTAMPDIFF',0,]
,['R_TRANSACTION'                  ,'TRANSACTION',0,]
,['R_TRIGGERS'                     ,'TRIGGERS',0,]
,['R_TRUNCATE'                     ,'TRUNCATE',0,]
,['R_TYPE'                         ,'TYPE',0,]
,['R_TYPES'                        ,'TYPES',0,]
,['R_UNBOUNDED'                    ,'UNBOUNDED',0,]
,['R_UNCOMMITTED'                  ,'UNCOMMITTED',0,]
,['R_UNDEFINED'                    ,'UNDEFINED',0,]
,['R_UNDO_BUFFER_SIZE'             ,'UNDO_BUFFER_SIZE',0,]
,['R_UNDOFILE'                     ,'UNDOFILE',0,]
,['R_UNICODE'                      ,'UNICODE',0,]
,['R_UNINSTALL'                    ,'UNINSTALL',0,]
,['R_UNKNOWN'                      ,'UNKNOWN',0,]
,['R_UNTIL'                        ,'UNTIL',1,]
,['R_UPGRADE'                      ,'UPGRADE',0,]
,['R_USE_FRM'                      ,'USE_FRM',0,]
,['R_USER'                         ,'USER',1,]
,['R_USER_RESOURCES'               ,'USER_RESOURCES',0,]
,['R_VALIDATION'                   ,'VALIDATION',0,]
,['R_VALUE'                        ,'VALUE',1,]
,['R_VARIABLES'                    ,'VARIABLES',0,]
,['R_VCPU'                         ,'VCPU',0,]
,['R_VIEW'                         ,'VIEW',1,]
,['R_VISIBLE'                      ,'VISIBLE',0,]
,['R_WAIT'                         ,'WAIT',0,]
,['R_WARNINGS'                     ,'WARNINGS',0,]
,['R_WEEK'                         ,'WEEK',0,]
,['R_WEIGHT_STRING'                ,'WEIGHT_STRING',0,]
,['R_WITHOUT'                      ,'WITHOUT',0,]
,['R_WORK'                         ,'WORK',0,]
,['R_WRAPPER'                      ,'WRAPPER',0,]
,['R_X509'                         ,'X509',0,]
,['R_XA'                           ,'XA',0,]
,['R_XID'                          ,'XID',0,]
,['R_XML'                          ,'XML',0,]
,['R_YEAR'                         ,'YEAR',0,]

,['D_NEW_LINE'                     ,'\n',1,]
,['D_TAB'                          ,'\t',1,]
,['D_SPACE'                        ,' ',1,]
,['D_COMMA'                        ,',',1,]
,['D_PERIOD'                       ,'.',1,]
,['D_DOLLAR'                       ,'$',1,]
,['D_SEMICOLON'                    ,';',1,]
,['D_UNDERSCORE'                   ,'_',1,]


,['N_ZERO'                         ,'0',1,]
,['N_ONE'                          ,'1',1,]
,['N_TWO'                          ,'2',1,]
,['N_THREE'                        ,'3',1,]
,['N_FOUR'                         ,'4',1,]
,['N_FIVE'                         ,'5',1,]
,['N_SIX'                          ,'6',1,]
,['N_SEVEN'                        ,'7',1,]
,['N_EIGHT'                        ,'8',1,]
,['N_NINE'                         ,'9',1,]

,['A_a'                            ,'a',1,]
,['A_b'                            ,'b',1,]
,['A_c'                            ,'c',1,]
,['A_d'                            ,'d',1,]
,['A_e'                            ,'e',1,]
,['A_f'                            ,'f',1,]
,['A_g'                            ,'g',1,]
,['A_h'                            ,'h',1,]
,['A_i'                            ,'i',1,]
,['A_j'                            ,'j',1,]
,['A_k'                            ,'k',1,]
,['A_l'                            ,'l',1,]
,['A_m'                            ,'m',1,]
,['A_n'                            ,'n',1,]
,['A_o'                            ,'o',1,]
,['A_p'                            ,'p',1,]
,['A_q'                            ,'q',1,]
,['A_r'                            ,'r',1,]
,['A_s'                            ,'s',1,]
,['A_t'                            ,'t',1,]
,['A_u'                            ,'u',1,]
,['A_v'                            ,'v',1,]
,['A_w'                            ,'w',1,]
,['A_x'                            ,'x',1,]
,['A_y'                            ,'y',1,]
,['A_z'                            ,'z',1,]
,['A_A'                            ,'A',1,]
,['A_B'                            ,'B',1,]
,['A_C'                            ,'C',1,]
,['A_D'                            ,'D',1,]
,['A_E'                            ,'E',1,]
,['A_F'                            ,'F',1,]
,['A_G'                            ,'G',1,]
,['A_H'                            ,'H',1,]
,['A_I'                            ,'I',1,]
,['A_J'                            ,'J',1,]
,['A_K'                            ,'K',1,]
,['A_L'                            ,'L',1,]
,['A_M'                            ,'M',1,]
,['A_N'                            ,'N',1,]
,['A_O'                            ,'O',1,]
,['A_P'                            ,'P',1,]
,['A_Q'                            ,'Q',1,]
,['A_R'                            ,'R',1,]
,['A_S'                            ,'S',1,]
,['A_T'                            ,'T',1,]
,['A_U'                            ,'U',1,]
,['A_V'                            ,'V',1,]
,['A_W'                            ,'W',1,]
,['A_X'                            ,'X',1,]
,['A_Y'                            ,'Y',1,]
,['A_Z'                            ,'Z',1,]

,['B_DOUBLE_QUOTE'                 ,'"',1,]
,['B_SINGLE_QUOTE'                 ,'\'',1,]
,['B_BACK_TIC'                     ,'`',1,]
,['B_LEFT_COMMENT'                 ,'/*',1,]
,['B_RIGHT_COMMENT'                ,'*/',1,]
,['B_COMMENT_SINGLE'               ,'--',1,]
,['B_LEFT_PAREN'                   ,'(',1,]
,['B_RIGHT_PAREN'                  ,')',1,]


#,['O_NULL_SAFE_EQUALS'             ,'<=>',1,]
#,['O_PLUS_EQUALS'                  ,'+=',1,]
#,['O_MINUS_EQUALS'                 ,'-=',1,]
#,['O_MULTIPLY_EQUALS'              ,'*=',1,]
#,['O_DIVIDE_EQUALS'                ,'/=',1,]
#,['O_MODULUS_EQUALS'               ,'%=',1,]
#,['O_GREATER_THAN_EQUALS'          ,'>=',1,]
#,['O_LESS_THAN_EQUALS'             ,'<=',1,]
#,['O_EQUALS'                       ,'==',1,]
#,['O_NOT_EQUALS'                   ,'!=',1,]
#,['O_NOT_EQUALS'                   ,'<>',1,]
#,['O_OR_EQUALS'                    ,'|=',1,]
#,['O_AND_EQUALS'                   ,'&=',1,]
#,['O_XOR_EQUALS'                   ,'^=',1,]
#,['O_SET'                          ,'=:',1,]
#
#,['O_SHORT_CIRCUIT_OR'             ,'||',1,]
#,['O_SHORT_CIRCUIT_AND'            ,'&&',1,]
#,['O_BITWISE_LEFT'                 ,'<<',1,]
#,['O_BITWISE_RIGHT'                ,'>>',1,]
#,['O_BITWISE_INVERSION'            ,'~',1,]
#
#,['O_PLUS'                         ,'+',1,]
#,['O_MINUS'                        ,'-',1,]
#,['O_MULTIPLY'                     ,'*',1,]
#,['O_DIVIDE'                       ,'/',1,]
#,['O_MODULUS'                      ,'%',1,]
#,['O_GREATER_THAN'                 ,'>',1,]
#,['O_LESS_THAN'                    ,'<',1,]
#,['O_ASIGN'                        ,'=',1,]
#,['O_NEGATE'                       ,'!',1,]
#,['O_OR'                           ,'|',1,]
#,['O_AND'                          ,'&',1,]
#,['O_XOR'                          ,'^',1,]
     
,['F_ABS'                               ,'ABS'                                  , 1, 'Return the absolute value' ]
,['F_ACOS'                              ,'ACOS'                                 , 1, 'Return the arc cosine' ]
,['F_ADDDATE'                           ,'ADDDATE'                              , 0, 'Add time values (intervals) to a date value' ]
,['F_ADDTIME'                           ,'ADDTIME'                              , 0, 'Add time' ]
,['F_AES_DECRYPT'                       ,'AES_DECRYPT'                          , 0, 'Decrypt using AES' ]
,['F_AES_ENCRYPT'                       ,'AES_ENCRYPT'                          , 0, 'Encrypt using AES' ]
,['F_AND'                               ,'AND'                                  , 1, 'Logical AND' ]
,['F_AND'                               ,'&&'                                   , 1, 'Logical AND' ]
,['F_ANY_VALUE'                         ,'ANY_VALUE'                            , 0, 'Suppress ONLY_FULL_GROUP_BY value rejection' ]
,['F_ASCII'                             ,'ASCII'                                , 1, 'Return numeric value of left-most character' ]
,['F_ASIN'                              ,'ASIN'                                 , 1, 'Return the arc sine' ]
,['F_EQUALS'                            ,'='                                    , 1, 'Assign a value (as part of a SET statement, or as part of the SET clause in an UPDATE statement)' ]
,['F_ASSIGN'                            ,':='                                   , 1, 'Assign a value' ]
,['F_ASYMMETRIC_DECRYPT'                ,'ASYMMETRIC_DECRYPT'                   , 0, 'Decrypt ciphertext using private or public key' ]
,['F_ASYMMETRIC_DERIVE'                 ,'ASYMMETRIC_DERIVE'                    , 0, 'Derive symmetric key from asymmetric keys' ]
,['F_ASYMMETRIC_ENCRYPT'                ,'ASYMMETRIC_ENCRYPT'                   , 0, 'Encrypt cleartext using private or public key' ]
,['F_ASYMMETRIC_SIGN'                   ,'ASYMMETRIC_SIGN'                      , 0, 'Generate signature from digest' ]
,['F_ASYMMETRIC_VERIFY'                 ,'ASYMMETRIC_VERIFY'                    , 0, 'Verify that signature matches digest' ]
,['F_ATAN'                              ,'ATAN'                                 , 1, 'Return the arc tangent' ]
,['F_ATAN2'                             ,'ATAN2'                                , 1, 'Return the arc tangent of the two arguments' ]
,['F_ATAN'                              ,'ATAN'                                 , 1, 'Return the arc tangent of the two arguments' ]
,['F_AVG'                               ,'AVG'                                  , 1, 'Return the average value of the argument' ]
,['F_BENCHMARK'                         ,'BENCHMARK'                            , 0, 'Repeatedly execute an expression' ]
,['F_BETWEEN'                           ,'BETWEEN ... AND ...'                  , 0, 'Whether a value is within a range of values' ]
,['F_BIN'                               ,'BIN'                                  , 0, 'Return a string containing binary representation of a number' ]
,['F_BIN_TO_UUID'                       ,'BIN_TO_UUID'                          , 0, 'Convert binary UUID to string' ]
,['F_BINARY'                            ,'BINARY'                               , 1, 'Cast a string to a binary string' ]
,['F_BIT_AND'                           ,'BIT_AND'                              , 1, 'Return bitwise AND' ]
,['F_BIT_COUNT'                         ,'BIT_COUNT'                            , 1, 'Return the number of bits that are set' ]
,['F_BIT_LENGTH'                        ,'BIT_LENGTH'                           , 1, 'Return length of argument in bits' ]
,['F_BIT_OR'                            ,'BIT_OR'                               , 1, 'Return bitwise OR' ]
,['F_BIT_XOR'                           ,'BIT_XOR'                              , 1, 'Return bitwise XOR' ]
,['F_AND'                               ,'&'                                    , 1, 'Bitwise AND' ]
,['F_INVERSION'                         ,'~'                                    , 1, 'Bitwise inversion' ]
,['F_OR'                                ,'|'                                    , 1, 'Bitwise OR' ]
,['F_XOR'                               ,'^'                                    , 1, 'Bitwise XOR' ]
,['F_CAN_ACCESS_COLUMN'                 ,'CAN_ACCESS_COLUMN'                    , 0, 'Internal use only' ]
,['F_CAN_ACCESS_DATABASE'               ,'CAN_ACCESS_DATABASE'                  , 0, 'Internal use only' ]
,['F_CAN_ACCESS_TABLE'                  ,'CAN_ACCESS_TABLE'                     , 0, 'Internal use only' ]
,['F_CAN_ACCESS_VIEW'                   ,'CAN_ACCESS_VIEW'                      , 0, 'Internal use only' ]
,['F_CASE'                              ,'CASE'                                 , 0, 'Case operator' ]
,['F_CAST'                              ,'CAST'                                 , 0, 'Cast a value as a certain type' ]
,['F_CEIL'                              ,'CEIL'                                 , 1, 'Return the smallest integer value not less than the argument' ]
,['F_CEILING'                           ,'CEILING'                              , 1, 'Return the smallest integer value not less than the argument' ]
,['F_CHAR'                              ,'CHAR'                                 , 1, 'Return the character for each integer passed' ]
,['F_CHAR_LENGTH'                       ,'CHAR_LENGTH'                          , 1, 'Return number of characters in argument' ]
,['F_CHARACTER_LENGTH'                  ,'CHARACTER_LENGTH'                     , 0, 'Synonym for CHAR_LENGTH()  ' ]
,['F_CHARSET'                           ,'CHARSET'                              , 0, 'Return the character set of the argument' ]
,['F_COALESCE'                          ,'COALESCE'                             , 0, 'Return the first non-NULL argument' ]
,['F_COERCIBILITY'                      ,'COERCIBILITY'                         , 0, 'Return the collation coercibility value of the string argument' ]
,['F_COLLATION'                         ,'COLLATION'                            , 0, 'Return the collation of the string argument' ]
,['F_COMPRESS'                          ,'COMPRESS'                             , 0, 'Return result as a binary string' ]
,['F_CONCAT'                            ,'CONCAT'                               , 0, 'Return concatenated string' ]
,['F_CONCAT_WS'                         ,'CONCAT_WS'                            , 0, 'Return concatenate with separator' ]
,['F_CONNECTION_ID'                     ,'CONNECTION_ID'                        , 0, 'Return the connection ID (thread ID) for the connection' ]
,['F_CONV'                              ,'CONV'                                 , 0, 'Convert numbers between different number bases' ]
,['F_CONVERT'                           ,'CONVERT'                              , 0, 'Cast a value as a certain type' ]
,['F_CONVERT_TZ'                        ,'CONVERT_TZ'                           , 0, 'Convert from one time zone to another' ]
,['F_COS'                               ,'COS'                                  , 1, 'Return the cosine' ]
,['F_COT'                               ,'COT'                                  , 1, 'Return the cotangent' ]
,['F_COUNT'                             ,'COUNT'                                , 1, 'Return a count of the number of rows returned' ]
,['F_COUNT'                             ,'COUNT(DISTINCT)'                      , 1, 'Return the count of a number of different values' ]
,['F_CRC32'                             ,'CRC32'                                , 0, 'Compute a cyclic redundancy check value' ]
,['F_CREATE_ASYMMETRIC_PRIV_KEY'        ,'CREATE_ASYMMETRIC_PRIV_KEY'           , 0, 'Create private key' ]
,['F_CREATE_ASYMMETRIC_PUB_KEY'         ,'CREATE_ASYMMETRIC_PUB_KEY'            , 0, 'Create public key' ]
,['F_CREATE_DH_PARAMETERS'              ,'CREATE_DH_PARAMETERS'                 , 0, 'Generate shared DH secret' ]
,['F_CREATE_DIGEST'                     ,'CREATE_DIGEST'                        , 0, 'Generate digest from string']
,['F_CUME_DIST'                         ,'CUME_DIST'                            , 0, 'Cumulative distribution value']
,['F_CURDATE'                           ,'CURDATE'                              , 1, 'Return the current date']
,['F_CURRENT_DATE'                      ,'CURRENT_DATE'                         , 1, 'CURRENT_DATE Synonyms for CURDATE()  ']
,['F_CURRENT_ROLE'                      ,'CURRENT_ROLE'                         , 0, 'Return the current active roles']
,['F_CURRENT_TIME'                      ,'CURRENT_TIME'                         , 1, 'CURRENT_TIME Synonyms for CURTIME()  ']
,['F_CURRENT_TIMESTAMP'                 ,'CURRENT_TIMESTAMP'                    , 1, 'CURRENT_TIMESTAMP Synonyms for NOW()  ']
,['F_CURRENT_USER'                      ,'CURRENT_USER'                         , 1, 'CURRENT_USER The authenticated user name and host name']
,['F_CURTIME'                           ,'CURTIME'                              , 1, 'Return the current time']
,['F_DATABASE'                          ,'DATABASE'                             , 1, 'Return the default (current) database name']
,['F_DATE'                              ,'DATE'                                 , 1, 'Extract the date part of a date or datetime expression']
,['F_DATE_ADD'                          ,'DATE_ADD'                             , 0, 'Add time values (intervals) to a date value']
,['F_DATE_FORMAT'                       ,'DATE_FORMAT'                          , 0, 'Format date as specified']
,['F_DATE_SUB'                          ,'DATE_SUB'                             , 0, 'Subtract a time value (interval) from a date']
,['F_DATEDIFF'                          ,'DATEDIFF'                             , 0, 'Subtract two dates']
,['F_DAY'                               ,'DAY'                                  , 1, 'Synonym for DAYOFMONTH()  ']
,['F_DAYNAME'                           ,'DAYNAME'                              , 0, 'Return the name of the weekday']
,['F_DAYOFMONTH'                        ,'DAYOFMONTH'                           , 0, 'Return the day of the month (0-31)']
,['F_DAYOFWEEK'                         ,'DAYOFWEEK'                            , 0, 'Return the weekday index of the argument']
,['F_DAYOFYEAR'                         ,'DAYOFYEAR'                            , 0, 'Return the day of the year (1-366)']
,['F_DECODE'                            ,'DECODE'                               , 0, 'Decode a string encrypted using ENCODE()  ']
,['F_DEFAULT'                           ,'DEFAULT'                              , 0, 'Return the default value for a table column']
,['F_DEGREES'                           ,'DEGREES'                              , 0, 'Convert radians to degrees']
,['F_DENSE_RANK'                        ,'DENSE_RANK'                           , 0, 'Rank of current row within its partition, without gaps']
,['F_DES_DECRYPT'                       ,'DES_DECRYPT'                          , 0, 'Decrypt a string']
,['F_DES_ENCRYPT'                       ,'DES_ENCRYPT'                          , 0, 'Encrypt a string']
,['F_DIV'                               ,'DIV'                                  , 0, 'Integer division']
,['F_DIVIDE'                            ,'/'                                    , 1, 'Division operator']
,['F_ELT'                               ,'ELT'                                  , 0, 'Return string at index number']
,['F_ENCODE'                            ,'ENCODE'                               , 0, 'Encode a string']
,['F_ENCRYPT'                           ,'ENCRYPT'                              , 0, 'Encrypt a string']
,['F_EQUALS'                            ,'='                                    , 1, 'Equal operator']
,['F_NULL_EQ'                           ,'<=>'                                  , 1, 'NULL-safe equal to operator']
,['F_EXP'                               ,'EXP'                                  , 1, 'Raise to the power of']
,['F_EXPORT_SET'                        ,'EXPORT_SET'                           , 0, 'Return a string such that for every bit set in the value bits, you get an on string and for every unset bit, you get an off string']
,['F_EXTRACT'                           ,'EXTRACT'                              , 0, 'Extract part of a date']
,['F_ExtractValue'                      ,'ExtractValue'                         , 0, 'Extract a value from an XML string using XPath notation']
,['F_FIELD'                             ,'FIELD'                                , 0, 'Index (position) of first argument in subsequent arguments']
,['F_FIND_IN_SET'                       ,'FIND_IN_SET'                          , 0, 'Index (position) of first argument within second argument']
,['F_FIRST_VALUE'                       ,'FIRST_VALUE'                          , 0, 'Value of argument from first row of window frame']
,['F_FLOOR'                             ,'FLOOR'                                , 1, 'Return the largest integer value not greater than the argument']
,['F_FORMAT'                            ,'FORMAT'                               , 0, 'Return a number formatted to specified number of decimal places']
,['F_FORMAT_BYTES'                      ,'FORMAT_BYTES'                         , 0, 'Convert byte count to value with units']
,['F_FORMAT_PICO_TIME'                  ,'FORMAT_PICO_TIME'                     , 0, 'Convert time in picoseconds to value with units']
,['F_FOUND_ROWS'                        ,'FOUND_ROWS'                           , 0, 'For a SELECT with a LIMIT clause, the number of rows that would be returned were there no LIMIT clause']
,['F_FROM_BASE64'                       ,'FROM_BASE64'                          , 0, 'Decode base64 encoded string and return result']
,['F_FROM_DAYS'                         ,'FROM_DAYS'                            , 0, 'Convert a day number to a date']
,['F_FROM_UNIXTIME'                     ,'FROM_UNIXTIME'                        , 0, 'Format Unix timestamp as a date']
,['F_GeomCollection'                    ,'GeomCollection'                       , 0, 'Construct geometry collection from geometries']
,['F_GeometryCollection'                ,'GeometryCollection'                   , 0, 'Construct geometry collection from geometries']
,['F_GET_DD_COLUMN_PRIVILEGES'          ,'GET_DD_COLUMN_PRIVILEGES'             , 0, 'Internal use only']
,['F_GET_DD_CREATE_OPTIONS'             ,'GET_DD_CREATE_OPTIONS'                , 0, 'Internal use only']
,['F_GET_DD_INDEX_SUB_PART_LENGTH'      ,'GET_DD_INDEX_SUB_PART_LENGTH'         , 0, 'Internal use only']
,['F_GET_FORMAT'                        ,'GET_FORMAT'                           , 0, 'Return a date format string']
,['F_GET_LOCK'                          ,'GET_LOCK'                             , 0, 'Get a named lock']
,['F_GREATER'                           ,'>'                                    , 1, 'Greater than operator']
,['F_GREATER_EQ'                        ,'>='                                   , 1, 'Greater than or equal operator']
,['F_GREATEST'                          ,'GREATEST'                             , 0, 'Return the largest argument']
,['F_GROUP_CONCAT'                      ,'GROUP_CONCAT'                         , 0, 'Return a concatenated string']
,['F_GROUPING'                          ,'GROUPING'                             , 0, 'Distinguish super-aggregate ROLLUP rows from regular rows']
,['F_GTID_SUBSET'                       ,'GTID_SUBSET'                          , 0, 'Return true if all GTIDs in subset are also in set; otherwise false.']
,['F_GTID_SUBTRACT'                     ,'GTID_SUBTRACT'                        , 0, 'Return all GTIDs in set that are not in subset.']
,['F_HEX'                               ,'HEX'                                  , 1, 'Hexadecimal representation of decimal or string value']
,['F_HOUR'                              ,'HOUR'                                 , 0, 'Extract the hour']
,['F_ICU_VERSION'                       ,'ICU_VERSION'                          , 0, 'ICU library version']
,['F_IF'                                ,'IF'                                   , 0, 'If/else construct']
,['F_IFNULL'                            ,'IFNULL'                               , 0, 'Null if/else construct']
,['F_IN'                                ,'IN'                                   , 1, 'Whether a value is within a set of values']
,['F_INET_ATON'                         ,'INET_ATON'                            , 0, 'Return the numeric value of an IP address']
,['F_INET_NTOA'                         ,'INET_NTOA'                            , 0, 'Return the IP address from a numeric value']
,['F_INET6_ATON'                        ,'INET6_ATON'                           , 0, 'Return the numeric value of an IPv6 address' ]
,['F_INET6_NTOA'                        ,'INET6_NTOA'                           , 0, 'Return the IPv6 address from a numeric value' ]
,['F_INSERT'                            ,'INSERT'                               , 0, 'Insert substring at specified position up to specified number of characters' ]
,['F_INSTR'                             ,'INSTR'                                , 0, 'Return the index of the first occurrence of substring' ]
,['F_INTERNAL_AUTO_INCREMENT'           ,'INTERNAL_AUTO_INCREMENT'              , 0, 'Internal use only' ]
,['F_INTERNAL_AVG_ROW_LENGTH'           ,'INTERNAL_AVG_ROW_LENGTH'              , 0, 'Internal use only' ]
,['F_INTERNAL_CHECK_TIME'               ,'INTERNAL_CHECK_TIME'                  , 0, 'Internal use only' ]
,['F_INTERNAL_CHECKSUM'                 ,'INTERNAL_CHECKSUM'                    , 0, 'Internal use only' ]
,['F_INTERNAL_DATA_FREE'                ,'INTERNAL_DATA_FREE'                   , 0, 'Internal use only' ]
,['F_INTERNAL_DATA_LENGTH'              ,'INTERNAL_DATA_LENGTH'                 , 0, 'Internal use only' ]
,['F_INTERNAL_DD_CHAR_LENGTH'           ,'INTERNAL_DD_CHAR_LENGTH'              , 0, 'Internal use only' ]
,['F_INTERNAL_GET_COMMENT_OR_ERROR'     ,'INTERNAL_GET_COMMENT_OR_ERROR'        , 0, 'Internal use only' ]
,['F_INTERNAL_GET_VIEW_WARNING_OR_ERROR','INTERNAL_GET_VIEW_WARNING_OR_ERROR'   , 0, 'Internal use only' ]
,['F_INTERNAL_INDEX_COLUMN_CARDINALITY' ,'INTERNAL_INDEX_COLUMN_CARDINALITY'    , 0, 'Internal use only' ]
,['F_INTERNAL_INDEX_LENGTH'             ,'INTERNAL_INDEX_LENGTH'                , 0, 'Internal use only' ]
,['F_INTERNAL_KEYS_DISABLED'            ,'INTERNAL_KEYS_DISABLED'               , 0, 'Internal use only' ]
,['F_INTERNAL_MAX_DATA_LENGTH'          ,'INTERNAL_MAX_DATA_LENGTH'             , 0, 'Internal use only' ]
,['F_INTERNAL_TABLE_ROWS'               ,'INTERNAL_TABLE_ROWS'                  , 0, 'Internal use only' ]
,['F_INTERNAL_UPDATE_TIME'              ,'INTERNAL_UPDATE_TIME'                 , 0, 'Internal use only' ]
,['F_INTERVAL'                          ,'INTERVAL'                             , 0, 'Return the index of the argument that is less than the first argument' ]
,['F_IS'                                ,'IS'                                   , 1, 'Test a value against a boolean' ]
,['F_IS_FREE_LOCK'                      ,'IS_FREE_LOCK'                         , 0, 'Whether the named lock is free' ]
,['F_IS_IPV4'                           ,'IS_IPV4'                              , 0, 'Whether argument is an IPv4 address' ]
,['F_IS_IPV4_COMPAT'                    ,'IS_IPV4_COMPAT'                       , 0, 'Whether argument is an IPv4-compatible address' ]
,['F_IS_IPV4_MAPPED'                    ,'IS_IPV4_MAPPED'                       , 0, 'Whether argument is an IPv4-mapped address' ]
,['F_IS_IPV6'                           ,'IS_IPV6'                              , 0, 'Whether argument is an IPv6 address' ]
,['F_NOT'                               ,'IS NOT'                               , 1, 'Test a value against a boolean' ]
,['F_NULL'                              ,'IS NOT NULL NOT NULL'                 , 1, 'value test' ]
,['F_NULL'                              ,'IS NULL NULL'                         , 1, 'value test' ]
,['F_IS_USED_LOCK'                      ,'IS_USED_LOCK'                         , 0, 'Whether the named lock is in use; return connection identifier if true' ]
,['F_IS_UUID'                           ,'IS_UUID'                              , 1, 'Whether argument is a valid UUID' ]
,['F_ISNULL'                            ,'ISNULL'                               , 1, 'Test whether the argument is NULL' ]
,['F_JSON_ARRAY'                        ,'JSON_ARRAY'                           , 0, 'Create JSON array' ]
,['F_JSON_ARRAY_APPEND'                 ,'JSON_ARRAY_APPEND'                    , 0, 'Append data to JSON document' ]
,['F_JSON_ARRAY_INSERT'                 ,'JSON_ARRAY_INSERT'                    , 0, 'Insert into JSON array' ]
,['F_JSON_ARRAYAGG'                     ,'JSON_ARRAYAGG'                        , 0, 'Return result set as a single JSON array' ]
,['F_JSON_EXTRACT'                      ,'->'                                   , 0, 'Return value from JSON column after evaluating path; equivalent to JSON_EXTRACT()  .' ]
,['F_JSON_CONTAINS'                     ,'JSON_CONTAINS'                        , 0, 'Whether JSON document contains specific object at path' ]
,['F_JSON_CONTAINS_PATH'                ,'JSON_CONTAINS_PATH'                   , 0, 'Whether JSON document contains any data at path' ]
,['F_JSON_DEPTH'                        ,'JSON_DEPTH'                           , 0, 'Maximum depth of JSON document' ]
,['F_JSON_EXTRACT'                      ,'JSON_EXTRACT'                         , 0, 'Return data from JSON document' ]
,['F_JSON_UNQUOTE_EXTRACT'              ,'->>'                                  , 0, 'Return value from JSON column after evaluating path and unquoting the result; equivalent to JSON_UNQUOTE(JSON_EXTRACT()  ).' ]
,['F_JSON_INSERT'                       ,'JSON_INSERT'                          , 0, 'Insert data into JSON document' ]
,['F_JSON_KEYS'                         ,'JSON_KEYS'                            , 0, 'Array of keys from JSON document' ]
,['F_JSON_LENGTH'                       ,'JSON_LENGTH'                          , 0, 'Number of elements in JSON document' ]
,['F_JSON_MERGE'                        ,'JSON_MERGE'                           , 0, '(deprecated 8.0.3) Merge JSON documents, preserving duplicate keys. Deprecated synonym for JSON_MERGE_PRESERVE()  ' ]
,['F_JSON_MERGE_PATCH'                  ,'JSON_MERGE_PATCH'                     , 0, 'Merge JSON documents, replacing values of duplicate keys' ]
,['F_JSON_MERGE_PRESERVE'               ,'JSON_MERGE_PRESERVE'                  , 0, 'Merge JSON documents, preserving duplicate keys' ]
,['F_JSON_OBJECT'                       ,'JSON_OBJECT'                          , 0, 'Create JSON object' ]
,['F_JSON_OBJECTAGG'                    ,'JSON_OBJECTAGG'                       , 0, 'Return result set as a single JSON object' ]
,['F_JSON_OVERLAPS'                     ,'JSON_OVERLAPS'                        , 0, 'Compares two JSON documents, returns TRUE (1) if these have any key-value pairs or array elements in common, otherwise FALSE (0)' ]
,['F_JSON_PRETTY'                       ,'JSON_PRETTY'                          , 0, 'Print a JSON document in human-readable format' ]
,['F_JSON_QUOTE'                        ,'JSON_QUOTE'                           , 0, 'Quote JSON document' ]
,['F_JSON_REMOVE'                       ,'JSON_REMOVE'                          , 0, 'Remove data from JSON document' ]
,['F_JSON_REPLACE'                      ,'JSON_REPLACE'                         , 0, 'Replace values in JSON document' ]
,['F_JSON_SCHEMA_VALID'                 ,'JSON_SCHEMA_VALID'                    , 0, 'Validate JSON document against JSON schema; returns TRUE/1 if document validates against schema, or FALSE/0 if it does not' ]
,['F_JSON_SCHEMA_VALIDATION_REPORT'     ,'JSON_SCHEMA_VALIDATION_REPORT'        , 0, 'Validate JSON document against JSON schema; returns report in JSON format on outcome on validation including success or failure and reasons for failure' ]
,['F_JSON_SEARCH'                       ,'JSON_SEARCH'                          , 0, 'Path to value within JSON document' ]
,['F_JSON_SET'                          ,'JSON_SET'                             , 0, 'Insert data into JSON document' ]
,['F_JSON_STORAGE_FREE'                 ,'JSON_STORAGE_FREE'                    , 0, 'Freed space within binary representation of JSON column value following partial update' ]
,['F_JSON_STORAGE_SIZE'                 ,'JSON_STORAGE_SIZE'                    , 0, 'Space used for storage of binary representation of a JSON document' ]
,['F_JSON_TABLE'                        ,'JSON_TABLE'                           , 0, 'Return data from a JSON expression as a relational table' ]
,['F_JSON_TYPE'                         ,'JSON_TYPE'                            , 0, 'Type of JSON value' ]
,['F_JSON_UNQUOTE'                      ,'JSON_UNQUOTE'                         , 0, 'Unquote JSON value' ]
,['F_JSON_VALID'                        ,'JSON_VALID'                           , 0, 'Whether JSON value is valid' ]
,['F_LAG'                               ,'LAG'                                  , 0, 'Value of argument from row lagging current row within partition' ]
,['F_LAST_DAY'                          ,'LAST_DAY'                             , 0, 'Return the last day of the month for the argument' ]
,['F_LAST_INSERT_ID'                    ,'LAST_INSERT_ID'                       , 0, 'Value of the AUTOINCREMENT column for the last INSERT' ]
,['F_LAST_VALUE'                        ,'LAST_VALUE'                           , 0, 'Value of argument from last row of window frame' ]
,['F_LCASE'                             ,'LCASE'                                , 1, 'Synonym for LOWER()  ' ]
,['F_LEAD'                              ,'LEAD'                                 , 0, 'Value of argument from row leading current row within partition' ]
,['F_LEAST'                             ,'LEAST'                                , 1, 'Return the smallest argument' ]
,['F_LEFT'                              ,'LEFT'                                 , 1, 'Return the leftmost number of characters as specified' ]
,['F_LEFT_SHIFT'                        ,'<<'                                   , 1, 'Left shift' ]
,['F_LENGTH'                            ,'LENGTH'                               , 1, 'Return the length of a string in bytes' ]
,['F_LESS'                              ,'<'                                    , 1, 'Less than operator' ]
,['F_LESS_EQ'                           ,'<='                                   , 1, 'Less than or equal operator' ]
,['F_LIKE'                              ,'LIKE'                                 , 1, 'Simple pattern matching' ]
,['F_LineString'                        ,'LineString'                           , 0, 'Construct LineString from Point values' ]
,['F_LN'                                ,'LN'                                   , 0, 'Return the natural logarithm of the argument' ]
,['F_LOAD_FILE'                         ,'LOAD_FILE'                            , 0, 'Load the named file' ]
,['F_LOCALTIME'                         ,'LOCALTIME'                            , 0, 'LOCALTIME Synonym for NOW()  ' ]
,['F_LOCALTIMESTAMP'                    ,'LOCALTIMESTAMP'                       , 0, 'Synonym for NOW()' , 'LOCALTIMESTAMP' ]
,['F_LOCATE'                            ,'LOCATE'                               , 0, 'Return the position of the first occurrence of substring' ]
,['F_LOG'                               ,'LOG'                                  , 0, 'Return the natural logarithm of the first argument' ]
,['F_LOG10'                             ,'LOG10'                                , 0, 'Return the base-10 logarithm of the argument' ]
,['F_LOG2'                              ,'LOG2'                                 , 0, 'Return the base-2 logarithm of the argument' ]
,['F_LOWER'                              ,'LOWER'                               , 1, 'Return the argument in lowercase' ]
,['F_LPAD'                               ,'LPAD'                                , 1, 'Return the string argument, left-padded with the specified string' ]
,['F_LTRIM'                              ,'LTRIM'                               , 0, 'Remove leading spaces' ]
,['F_MAKE_SET'                           ,'MAKE_SET'                            , 0, 'Return a set of comma-separated strings that have the corresponding bit in bits set' ]
,['F_MAKEDATE'                           ,'MAKEDATE'                            , 0, 'Create a date from the year and day of year' ]
,['F_MAKETIME'                           ,'MAKETIME'                            , 0, 'Create time from hour, minute, second' ]
,['F_MASTER_POS_WAIT'                    ,'MASTER_POS_WAIT'                     , 0, 'Block until the slave has read and applied all updates up to the specified position' ]
,['F_MATCH'                              ,'MATCH'                               , 0, 'Perform full-text search' ]
,['F_MAX'                                ,'MAX'                                 , 1, 'Return the maximum value' ]
,['F_MBRContains'                        ,'MBRContains'                         , 0, 'Whether MBR of one geometry contains MBR of another' ]
,['F_MBRCoveredBy'                       ,'MBRCoveredBy'                        , 0, 'Whether one MBR is covered by another' ]
,['F_MBRCovers'                          ,'MBRCovers'                           , 0, 'Whether one MBR covers another' ]
,['F_MBRDisjoint'                        ,'MBRDisjoint'                         , 0, 'Whether MBRs of two geometries are disjoint' ]
,['F_MBREquals'                          ,'MBREquals'                           , 0, 'Whether MBRs of two geometries are equal' ]
,['F_MBRIntersects'                      ,'MBRIntersects'                       , 0, 'Whether MBRs of two geometries intersect' ]
,['F_MBROverlaps'                        ,'MBROverlaps'                         , 0, 'Whether MBRs of two geometries overlap' ]
,['F_MBRTouches'                         ,'MBRTouches'                          , 0, 'Whether MBRs of two geometries touch' ]
,['F_MBRWithin'                          ,'MBRWithin'                           , 0, 'Whether MBR of one geometry is within MBR of another' ]
,['F_MD5'                                ,'MD5'                                 , 1, 'Calculate MD5 checksum' ]
,['F_MEMBER OF'                          ,'MEMBER OF'                           , 0, 'Returns true (1) if first operand matches any element of JSON array passed as second operand, otherwise returns false (0)' ]
,['F_MICROSECOND'                        ,'MICROSECOND'                         , 1, 'Return the microseconds from argument' ]
,['F_MID'                                ,'MID'                                 , 0, 'Return a substring starting from the specified position' ]
,['F_MIN'                                ,'MIN'                                 , 1, 'Return the minimum value' ]
,['F_MINUS'                              ,'-'                                   , 1, 'Minus operator' ]
,['F_MINUTE'                             ,'MINUTE'                              , 1, 'Return the minute from the argument' ]
,['F_MOD'                                ,'MOD'                                 , 1, 'Return the remainder' ]
,['F_MOD'                                ,'%'                                   , 1, 'Modulo operator' ]
,['F_MONTH'                              ,'MONTH'                               , 1, 'Return the month from the date passed' ]
,['F_MONTHNAME'                          ,'MONTHNAME'                           , 1, 'Return the name of the month' ]
,['F_MultiLineString'                    ,'MultiLineString'                     , 0, 'Contruct MultiLineString from LineString values' ]
,['F_MultiPoint'                         ,'MultiPoint'                          , 0, 'Construct MultiPoint from Point values' ]
,['F_MultiPolygon'                       ,'MultiPolygon'                        , 0, 'Construct MultiPolygon from Polygon values' ]
,['F_NAME_CONST'                         ,'NAME_CONST'                          , 0, 'Cause the column to have the given name' ]
,['F_NOT'                                ,'NOT'                                 , 1, 'Negates value', ]
,['F_NOT BETWEEN ... AND ... '           ,'NOT BETWEEN ... AND ... '            , 0, 'Whether a value is not within a range of values' ]
,['F_NOT_EQ'                             ,'!='                                  , 1, 'Not equal operator' ]
,['F_NOT_EQ'                             ,'<>'                                  , 1, 'Not equal operator' ]
,['F_NOT_IN'                             ,'NOT IN'                              , 1, 'Whether a value is not within a set of values' ]
,['F_NOT_LIKE'                           ,'NOT LIKE'                            , 1, 'Negation of simple pattern matching' ]
,['F_NOT_REGEXP'                         ,'NOT REGEXP'                          , 0, 'Negation of REGEXP' ]
,['F_NOW'                                ,'NOW'                                 , 1, 'Return the current date and time' ]
,['F_NTH_VALUE'                          ,'NTH_VALUE'                           , 0, 'Value of argument from N-th row of window frame' ]
,['F_NTILE'                              ,'NTILE'                               , 0, 'Bucket number of current row within its partition.' ]
,['F_NULLIF'                             ,'NULLIF'                              , 0, 'Return NULL if expr1 = expr2' ]
,['F_OCT'                                ,'OCT'                                 , 0, 'Return a string containing octal representation of a number' ]
,['F_OCTET_LENGTH'                       ,'OCTET_LENGTH'                        , 0, 'Synonym for LENGTH()  ' ]
,['F_OR'                                 ,'OR'                                  , 1, 'Logical OR' ]
,['F_OR'                                 ,'||'                                  , 1, 'Logical OR' ]
,['F_ORD'                                ,'ORD'                                 , 1, 'Return character code for leftmost character of the argument' ]
,['F_PASSWORD'                           ,'PASSWORD'                            , 0, 'Calculate and return a password string']
,['F_PERCENT_RANK'                       ,'PERCENT_RANK'                        , 0, 'Percentage rank value']
,['F_PERIOD_ADD'                         ,'PERIOD_ADD'                          , 0, 'Add a period to a year-month']
,['F_PERIOD_DIFF'                        ,'PERIOD_DIFF'                         , 0, 'Return the number of months between periods']
,['F_PI'                                 ,'PI'                                  , 1, 'Return the value of pi']
,['F_PLUS'                               ,'+'                                   , 1, 'Addition operator']
,['F_Point'                              ,'Point'                               , 0, 'Construct Point from coordinates']
,['F_Polygon'                            ,'Polygon'                             , 0, 'Construct Polygon from LineString arguments']
,['F_POSITION'                           ,'POSITION'                            , 0, 'Synonym for LOCATE()  ']
,['F_POW'                                ,'POW'                                 , 1, 'Return the argument raised to the specified power']
,['F_POWER'                              ,'POWER'                               , 0, 'Return the argument raised to the specified power']
,['F_PS_CURRENT_THREAD_ID'               ,'PS_CURRENT_THREAD_ID'                , 0, 'Performance Schema thread ID for current thread']
,['F_PS_THREAD_ID'                       ,'PS_THREAD_ID'                        , 0, 'Performance Schema thread ID for given thread']
,['F_QUARTER'                            ,'QUARTER'                             , 0, 'Return the quarter from a date argument']
,['F_QUOTE'                              ,'QUOTE'                               , 0, 'Escape the argument for use in an SQL statement']
,['F_RADIANS'                            ,'RADIANS'                             , 0, 'Return argument converted to radians']
,['F_RAND'                               ,'RAND'                                , 0, 'Return a random floating-point value']
,['F_RANDOM_BYTES'                       ,'RANDOM_BYTES'                        , 0, 'Return a random byte vector']
,['F_RANK'                               ,'RANK'                                , 0, 'Rank of current row within its partition, with gaps']
,['F_REGEXP'                             ,'REGEXP'                              , 0, 'Whether string matches regular expression']
,['F_REGEXP_INSTR'                       ,'REGEXP_INSTR'                        , 0, 'Starting index of substring matching regular expression']
,['F_REGEXP_LIKE'                        ,'REGEXP_LIKE'                         , 0, 'Whether string matches regular expression']
,['F_REGEXP_REPLACE'                     ,'REGEXP_REPLACE'                      , 0, 'Replace substrings matching regular expression']
,['F_REGEXP_SUBSTR'                      ,'REGEXP_SUBSTR'                       , 0, 'Return substring matching regular expression']
,['F_RELEASE_ALL_LOCKS'                  ,'RELEASE_ALL_LOCKS'                   , 0, 'Release all current named locks']
,['F_RELEASE_LOCK'                       ,'RELEASE_LOCK'                        , 0, 'Release the named lock']
,['F_REPEAT'                             ,'REPEAT'                              , 0, 'Repeat a string the specified number of times']
,['F_REPLACE'                            ,'REPLACE'                             , 1, 'Replace occurrences of a specified string']
,['F_REVERSE'                            ,'REVERSE'                             , 1, 'Reverse the characters in a string']
,['F_RIGHT'                              ,'RIGHT'                               , 1, 'Return the specified rightmost number of characters']
,['F_SHIFT_RIGHT'                        ,'>>'                                  , 1, 'Right shift']
,['F_RLIKE'                              ,'RLIKE'                               , 0, 'Whether string matches regular expression']
,['F_ROLES_GRAPHML'                      ,'ROLES_GRAPHML'                       , 0, 'Return a GraphML document representing memory role subgraphs']
,['F_ROUND'                              ,'ROUND'                               , 1, 'Round the argument']
,['F_ROW_COUNT'                          ,'ROW_COUNT'                           , 1, 'The number of rows updated']
,['F_ROW_NUMBER'                         ,'ROW_NUMBER'                          , 1, 'Number of current row within its partition']
,['F_RPAD'                               ,'RPAD'                                , 1, 'Append string the specified number of times']
,['F_RTRIM'                              ,'RTRIM'                               , 1, 'Remove trailing spaces']
,['F_SCHEMA'                             ,'SCHEMA'                              , 1, 'Synonym for DATABASE()  ']
,['F_SEC_TO_TIME'                        ,'SEC_TO_TIME'                         , 0, 'Converts seconds to "hh:mm:ss" format']
,['F_SECOND'                             ,'SECOND'                              , 1, 'Return the second (0-59)']
,['F_SESSION_USER'                       ,'SESSION_USER'                        , 0, 'Synonym for USER()  ']
,['F_SHA1'                               ,'SHA1'                                , 1, 'Calculate an SHA-1 160-bit checksum']
,['F_SHA1'                               ,'SHA'                                 , 1, 'Calculate an SHA-1 160-bit checksum']
,['F_SHA2'                               ,'SHA2'                                , 1, 'Calculate an SHA-2 checksum']
,['F_SIGN'                               ,'SIGN'                                , 0, 'Return the sign of the argument']
,['F_SIN'                                ,'SIN'                                 , 1, 'Return the sine of the argument']
,['F_SLEEP'                              ,'SLEEP'                               , 0, 'Sleep for a number of seconds']
,['F_SOUNDEX'                            ,'SOUNDEX'                             , 0, 'Return a soundex string']
,['F_LIKE'                               ,'SOUNDS LIKE'                         , 0, 'Return a string of the specified number of spaces' ]
,['F_soundsSPACE'                        ,'Compare soundsSPACE'                 , 0, 'Return a string of the specified number of spaces' ]
,['F_SQRT'                               ,'SQRT'                                , 1, 'Return the square root of the argument']
,['F_ST_Area'                            ,'ST_Area'                             , 0, 'Return Polygon or MultiPolygon area']
,['F_ST_AsBinary'                        ,'ST_AsBinary'                         , 0, 'Convert from internal geometry format to WKB', ]
,['F_ST_AsWKB'                           ,'ST_AsWKB'                            , 0, 'Convert from internal geometry format to WKB', ]
,['F_ST_AsGeoJSON'                       ,'ST_AsGeoJSON'                        , 0, 'Generate GeoJSON object from geometry']
,['F_ST_AsText'                          ,'ST_AsText'                           , 0, 'Convert from internal geometry format to WKT']
,['F_ST_AsWKT'                           ,'ST_AsWKT'                            , 0, 'Convert from internal geometry format to WKT']
,['F_ST_Buffer'                          ,'ST_Buffer'                           , 0, 'Return geometry of points within given distance from geometry']
,['F_ST_Buffer_Strategy'                 ,'ST_Buffer_Strategy'                  , 0, 'Produce strategy option for ST_Buffer()  ']
,['F_ST_Centroid'                        ,'ST_Centroid'                         , 0, 'Return centroid as a point']
,['F_ST_Contains'                        ,'ST_Contains'                         , 0, 'Whether one geometry contains another']
,['F_ST_ConvexHull'                      ,'ST_ConvexHull'                       , 0, 'Return convex hull of geometry']
,['F_ST_Crosses'                         ,'ST_Crosses'                          , 0, 'Whether one geometry crosses another']
,['F_ST_Difference'                      ,'ST_Difference'                       , 0, 'Return point set difference of two geometries']
,['F_ST_Dimension'                       ,'ST_Dimension'                        , 0, 'Dimension of geometry']
,['F_ST_Disjoint'                        ,'ST_Disjoint'                         , 0, 'Whether one geometry is disjoint from another']
,['F_ST_Distance'                        ,'ST_Distance'                         , 0, 'The distance of one geometry from another']
,['F_ST_Distance_Sphere'                 ,'ST_Distance_Sphere'                  , 0, 'Minimum distance on earth between two geometries']
,['F_ST_EndPoint'                        ,'ST_EndPoint'                         , 0, 'End Point of LineString']
,['F_ST_Envelope'                        ,'ST_Envelope'                         , 0, 'Return MBR of geometry']
,['F_ST_Equals'                          ,'ST_Equals'                           , 0, 'Whether one geometry is equal to another']
,['F_ST_ExteriorRing'                    ,'ST_ExteriorRing'                     , 0, 'Return exterior ring of Polygon']
,['F_ST_GeoHash'                         ,'ST_GeoHash'                          , 0, 'Produce a geohash value']
,['F_ST_GeomCollFromText'                ,'ST_GeomCollFromText'                 , 0, 'Return geometry collection from WKT' ]
,['F_ST_GeometryCollectionFromText'      ,'ST_GeometryCollectionFromText'       , 0, 'Return geometry collection from WKT' ]
,['F_ST_GeomCollFromTxt'                 ,'ST_GeomCollFromTxt'                  , 0, 'Return geometry collection from WKT' ]
,['F_ST_GeomCollFromWKB'                 ,'ST_GeomCollFromWKB'                  , 0, 'Return geometry collection from WKB' ]
,['F_ST_GeometryCollectionFromWKB'       ,'ST_GeometryCollectionFromWKB'        , 0, 'Return geometry collection from WKB' ]
,['F_ST_GeomCollFromWKB'                 ,'ST_GeomCollFromWKB'                  , 0, 'Return geometry collection from WKB'  ]
,['F_ST_GeometryN'                       ,'ST_GeometryN'                        , 0, 'Return N-th geometry from geometry collection']
,['F_ST_GeometryType'                    ,'ST_GeometryType'                     , 0, 'Return name of geometry type']
,['F_ST_GeomFromGeoJSON'                 ,'ST_GeomFromGeoJSON'                  , 0, 'Generate geometry from GeoJSON object']
,['F_ST_GeomFromText'                    ,'ST_GeomFromText'                     , 0, 'Return geometry from WKT']
,['F_ST_GeometryFromText'                ,'ST_GeometryFromText'                 , 0, 'Return geometry from WKT']
,['F_ST_GeomFromWKB'                     ,'ST_GeomFromWKB'                      , 0, 'Return geometry from WKB']
,['F_ST_GeometryFromWKB'                 ,'ST_GeometryFromWKB'                  , 0, 'Return geometry from WKB']
,['F_ST_InteriorRingN'                   ,'ST_InteriorRingN'                    , 0, 'Return N-th interior ring of Polygon']
,['F_ST_Intersection'                    ,'ST_Intersection'                     , 0, 'Return point set intersection of two geometries']
,['F_ST_Intersects'                      ,'ST_Intersects'                       , 0, 'Whether one geometry intersects another']
,['F_ST_IsClosed'                        ,'ST_IsClosed'                         , 0, 'Whether a geometry is closed and simple']
,['F_ST_IsEmpty'                         ,'ST_IsEmpty'                          , 0, 'Placeholder function']
,['F_ST_IsSimple'                        ,'ST_IsSimple'                         , 0, 'Whether a geometry is simple']
,['F_ST_IsValid'                         ,'ST_IsValid'                          , 0, 'Whether a geometry is valid']
,['F_ST_LatFromGeoHash'                  ,'ST_LatFromGeoHash'                   , 0, 'Return latitude from geohash value']
,['F_ST_Latitude'                        ,'ST_Latitude'                         , 0, 'Return latitude of Point']
,['F_ST_Length'                          ,'ST_Length'                           , 0, 'Return length of LineString']
,['F_ST_LineFromText'                    ,'ST_LineFromText'                     , 0, 'Construct LineString from WKT' ]
,['F_ST_LineStringFromText'              ,'ST_LineStringFromText'               , 0, 'Construct LineString from WKT' ]
,['F_ST_LineFromWKB'                     ,'ST_LineFromWKB'                      , 0, 'Construct LineString from WKB' ]
,['F_ST_LineStringFromWKB'               ,'ST_LineStringFromWKB'                , 0, 'Construct LineString from WKB' ]
,['F_ST_LongFromGeoHash'                 ,'ST_LongFromGeoHash'                  , 0, 'Return longitude from geohash value']
,['F_ST_Longitude'                       ,'ST_Longitude'                        , 0, 'Return longitude of Point']
,['F_ST_MakeEnvelope'                    ,'ST_MakeEnvelope'                     , 0, 'Rectangle around two points']
,['F_ST_MLineFromText'                   ,'ST_MLineFromText'                    , 0, 'Construct MultiLineString from WKT']
,['F_ST_MLineFromWKB'                    ,'ST_MLineFromWKB'                     , 0, 'Construct MultiLineString from WKB']
,['F_ST_MPointFromText'                  ,'ST_MPointFromText'                   , 0, 'Construct MultiPoint from WKT' ]
,['F_ST_MPointFromWKB'                   ,'ST_MPointFromWKB'                    , 0, 'Construct MultiPoint from WKB' ]
,['F_ST_MPolyFromText'                   ,'ST_MPolyFromText'                    , 0, 'Construct MultiPolygon from WKT']
,['F_ST_MPolyFromWKB'                    ,'ST_MPolyFromWKB'                     , 0, 'Construct MultiPolygon from WKB']
,['F_ST_NumGeometries'                   ,'ST_NumGeometries'                    , 0, 'Return number of geometries in geometry collection']
,['F_ST_NumInteriorRing'                 ,'ST_NumInteriorRing'                  , 0, 'Return number of interior rings in Polygon']
,['F_ST_MultiLineStringFromText'         ,'ST_MultiLineStringFromText'          , 0, 'Construct MultiLineString from WKT' ]
,['F_ST_MultiLineStringFromWKB'          ,'ST_MultiLineStringFromWKB'           , 0, 'Construct MultiLineString from WKB']
,['F_ST_MultiPointFromText'              ,'ST_MultiPointFromText'               , 0, 'Construct MultiPoint from WKT' ]
,['F_ST_MultiPointFromWKB'               ,'ST_MultiPointFromWKB'                , 0, 'Construct MultiPoint from WKB' ]
,['F_ST_MultiPolygonFromText'            ,'ST_MultiPolygonFromText'             , 0, 'Construct MultiPolygon from WKT' ]
,['F_ST_MultiPolygonFromWKB'             ,'ST_MultiPolygonFromWKB'              , 0, 'Construct MultiPolygon from WKB' ]
,['F_ST_NumInteriorRings'                ,'ST_NumInteriorRings'                 , 0, 'Return number of interior rings in Polygon' ]
,['F_ST_NumPoints'                       ,'ST_NumPoints'                        , 0, 'Return number of points in LineString']
,['F_ST_Overlaps'                        ,'ST_Overlaps'                         , 0, 'Whether one geometry overlaps another']
,['F_ST_PointFromGeoHash'                ,'ST_PointFromGeoHash'                 , 0, 'Convert geohash value to POINT value']
,['F_ST_PointFromText'                   ,'ST_PointFromText'                    , 0, 'Construct Point from WKT']
,['F_ST_PointFromWKB'                    ,'ST_PointFromWKB'                     , 0, 'Construct Point from WKB']
,['F_ST_PointN'                          ,'ST_PointN'                           , 0, 'Return N-th point from LineString']
,['F_ST_PolyFromText'                    ,'ST_PolyFromText'                     , 0, 'Construct Polygon from WKT']
,['F_ST_PolygonFromText'                 ,'ST_PolygonFromText'                  , 0, 'Construct Polygon from WKT']
,['F_ST_PolyFromWKB'                     ,'ST_PolyFromWKB'                      , 0, 'Construct Polygon from WKB']
,['F_ST_PolygonFromWKB'                  ,'ST_PolygonFromWKB'                   , 0, 'Construct Polygon from WKB']
,['F_ST_Simplify'                        ,'ST_Simplify'                         , 0, 'Return simplified geometry']
,['F_ST_SRID'                            ,'ST_SRID'                             , 0, 'Return spatial reference system ID for geometry']
,['F_ST_StartPoint'                      ,'ST_StartPoint'                       , 0, 'Start Point of LineString']
,['F_ST_SwapXY'                          ,'ST_SwapXY'                           , 0, 'Return argument with X/Y coordinates swapped']
,['F_ST_SymDifference'                   ,'ST_SymDifference'                    , 0, 'Return point set symmetric difference of two geometries']
,['F_ST_Touches'                         ,'ST_Touches'                          , 0, 'Whether one geometry touches another']
,['F_ST_Transform'                       ,'ST_Transform'                        , 0, 'Transform coordinates of geometry']
,['F_ST_Union'                           ,'ST_Union'                            , 0, 'Return point set union of two geometries']
,['F_ST_Validate'                        ,'ST_Validate'                         , 0, 'Return validated geometry']
,['F_ST_Within'                          ,'ST_Within'                           , 0, 'Whether one geometry is within another']
,['F_ST_X'                               ,'ST_X'                                , 0, 'Return X coordinate of Point']
,['F_ST_Y'                               ,'ST_Y'                                , 0, 'Return Y coordinate of Point']
,['F_STATEMENT_DIGEST'                   ,'STATEMENT_DIGEST'                    , 0, 'Compute statement digest hash value']
,['F_STATEMENT_DIGEST_TEXT'              ,'STATEMENT_DIGEST_TEXT'               , 0, 'Compute normalized statement digest']
,['F_STD'                                ,'STD'                                 , 0, 'Return the population standard deviation']
,['F_STDDEV'                             ,'STDDEV'                              , 0, 'Return the population standard deviation']
,['F_STDDEV_POP'                         ,'STDDEV_POP'                          , 0, 'Return the population standard deviation']
,['F_STDDEV_SAMP'                        ,'STDDEV_SAMP'                         , 0, 'Return the sample standard deviation']
,['F_STR_TO_DATE'                        ,'STR_TO_DATE'                         , 0, 'Convert a string to a date']
,['F_STRCMP'                             ,'STRCMP'                              , 1, 'Compare two strings']
,['F_SUBDATE'                            ,'SUBDATE'                             , 0, 'Synonym for DATE_SUB()   when invoked with three arguments']
,['F_SUBSTR'                             ,'SUBSTR'                              , 1, 'Return the substring as specified']
,['F_SUBSTRING'                          ,'SUBSTRING'                           , 0, 'Return the substring as specified']
,['F_SUBSTRING_INDEX'                    ,'SUBSTRING_INDEX'                     , 0, 'Return a substring from a string before the specified number of occurrences of the delimiter']
,['F_SUBTIME'                            ,'SUBTIME'                             , 0, 'Subtract times']
,['F_SUM'                                ,'SUM'                                 , 1, 'Return the sum']
,['F_SYSDATE'                            ,'SYSDATE'                             , 0, 'Return the time at which the function executes']
,['F_SYSTEM_USER'                        ,'SYSTEM_USER'                         , 0, 'Synonym for USER()  ']
,['F_TAN'                                ,'TAN'                                 , 1, 'Return the tangent of the argument']
,['F_TIME'                               ,'TIME'                                , 1, 'Extract the time portion of the expression passed']
,['F_TIME_FORMAT'                        ,'TIME_FORMAT'                         , 0, 'Format as time']
,['F_TIME_TO_SEC'                        ,'TIME_TO_SEC'                         , 0, 'Return the argument converted to seconds']
,['F_TIMEDIFF'                           ,'TIMEDIFF'                            , 0, 'Subtract time']
,['F_PRODUCT'                            ,'*'                                   , 1, 'Multiplication operator']
,['F_TIMESTAMP'                          ,'TIMESTAMP'                           , 0, 'With a single argument, this function returns the date or datetime expression; with two arguments, the sum of the arguments']
,['F_TIMESTAMPADD'                       ,'TIMESTAMPADD'                        , 0, 'Add an interval to a datetime expression']
,['F_TIMESTAMPDIFF'                      ,'TIMESTAMPDIFF'                       , 0, 'Subtract an interval from a datetime expression']
,['F_TO_BASE64'                          ,'TO_BASE64'                           , 1, 'Return the argument converted to a base-64 string']
,['F_TO_DAYS'                            ,'TO_DAYS'                             , 1, 'Return the date argument converted to days']
,['F_TO_SECONDS'                         ,'TO_SECONDS'                          , 1, 'Return the date or datetime argument converted to seconds since Year 0']
,['F_TRIM'                               ,'TRIM'                                , 1, 'Remove leading and trailing spaces']
,['F_TRUNCATE'                           ,'TRUNCATE'                            , 1, 'Truncate to specified number of decimal places']
,['F_UCASE'                              ,'UCASE'                               , 1, 'Synonym for UPPER()  ']
,['F_MINUS'                              ,'-'                                   , 1, 'Change the sign of the argument']
,['F_UNCOMPRESS'                         ,'UNCOMPRESS'                          , 0, 'Uncompress a string compressed']
,['F_UNCOMPRESSED_LENGTH'                ,'UNCOMPRESSED_LENGTH'                 , 0, 'Return the length of a string before compression']
,['F_UNHEX'                              ,'UNHEX'                               , 0, 'Return a string containing hex representation of a number']
,['F_UNIX_TIMESTAMP'                     ,'UNIX_TIMESTAMP'                      , 0, 'Return a Unix timestamp']
,['F_UpdateXML'                          ,'UpdateXML'                           , 0, 'Return replaced XML fragment']
,['F_UPPER'                              ,'UPPER'                               , 1, 'Convert to uppercase']
,['F_USER'                               ,'USER'                                , 1, 'The user name and host name provided by the client']
,['F_UTC_DATE'                           ,'UTC_DATE'                            , 0, 'Return the current UTC date']
,['F_UTC_TIME'                           ,'UTC_TIME'                            , 0, 'Return the current UTC time']
,['F_UTC_TIMESTAMP'                      ,'UTC_TIMESTAMP'                       , 0, 'Return the current UTC date and time']
,['F_UUID'                               ,'UUID'                                , 1, 'Return a Universal Unique Identifier (UUID)']
,['F_UUID_SHORT'                         ,'UUID_SHORT'                          , 0, 'Return an integer-valued universal identifier']
,['F_UUID_TO_BIN'                        ,'UUID_TO_BIN'                         , 0, 'Convert string UUID to binary']
,['F_VALIDATE_PASSWORD_STRENGTH'         ,'VALIDATE_PASSWORD_STRENGTH'          , 0, 'Determine strength of password']
,['F_VALUES'                             ,'VALUES'                              , 1, 'Define the values to be used during an INSERT']
,['F_VAR_POP'                            ,'VAR_POP'                             , 0, 'Return the population standard variance']
,['F_VAR_SAMP'                           ,'VAR_SAMP'                            , 0, 'Return the sample variance']
,['F_VARIANCE'                           ,'VARIANCE'                            , 0, 'Return the population standard variance']
,['F_VERSION'                            ,'VERSION'                             , 1, 'Return a string that indicates the MySQL server version']
,['F_WAIT_FOR_EXECUTED_GTID_SET'         ,'WAIT_FOR_EXECUTED_GTID_SET'          , 0, 'Wait until the given GTIDs have executed on the slave.']
,['F_WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS'  ,'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS'   , 0, 'deprecated 8.0.18) Deprecated. Use WAIT_FOR_EXECUTED_GTID_SET()  .']
,['F_WEEK'                               ,'WEEK'                                , 1, 'Return the week number']
,['F_WEEKDAY'                            ,'WEEKDAY'                             , 1, 'Return the weekday index']
,['F_WEEKOFYEAR'                         ,'WEEKOFYEAR'                          , 0, 'Return the calendar week of the date (1-53)']
,['F_WEIGHT_STRING'                      ,'WEIGHT_STRING'                       , 0, 'Return the weight string for a string']
,['F_XOR'                                ,'XOR'                                 , 1, 'Logical XOR']
,['F_YEAR'                               ,'YEAR'                                , 1, 'Return the year']
,['F_YEARWEEK'                           ,'YEARWEEK'                            , 1, 'Return the year and week']
]

###
###  Template out constant values
###


order="BRKFNADO"
section_index=SECTION_BLOCK_START
    
index=0
for section in order:

    index=section_index
    
    if section=="O": section_name="OPERATOR"
    if section=="B": section_name="BLOCK"
    if section=="R": section_name="RESERVED"
    if section=="K": section_name="KEYWORD"
    if section=="T": section_name="TEXT"
    if section=="A": section_name="ALPHA"
    if section=="N": section_name="NUMERIC"
    if section=="D": section_name="DELIMITER"
    if section=="F": section_name="FUNCTION"

    pad=" ".ljust(10-len(section_name))
    template.add("section_range","{0}_START{2}={1}".format(section_name,section_index,pad))
    template.add("section_range","{0}_END{2}  ={1}".format(section_name,section_index+SECTION_BLOCK_INCREMENT-1,pad))
    for item in words:
        
        if item[2]==1:
            if item[0][0]==section:
                item.append(index)
                index+=1
    section_index+=SECTION_BLOCK_INCREMENT
    

for i in range(2):

    template.add('vars',"")
    template.add('vars',"##")
    if i==0:
        template.add('vars',"## Integer Values")
    else:
        template.add('vars',"## String Values")
    template.add('vars',"##")
    template.add('vars',"")
        
    for section in order:
        template.add('vars',"")
        if section=="O": template.add('vars',"# OPERATOR")
        if section=="B": template.add('vars',"# BLOCK")
        if section=="R": template.add('vars',"# RESERVED WORD")
        if section=="K": template.add('vars',"# KEYWORD")
        if section=="T": template.add('vars',"# TEXT")
        if section=="A": template.add('vars',"# ALPHA")
        if section=="N": template.add('vars',"# NUMERIC")
        if section=="D": template.add('vars',"# DELIMITER")
        if section=="F": template.add('vars',"# FUNCTIONS")
        template.add('vars',"")    
        #template.add('vars','STRING=0x{0:04X}'.format(1))

        for item in words:
            if item[2]==1:
                if item[0][0]==section:
                    if i==0:
                        code=item[3]
                        
                        if isinstance(code,str)==True:
                            code=item[4]
                        try:
                            template.add('vars',item[0][2:]+'='+"0x{0:04X}".format(code))
                        except:
                            raise Exception(code)
                    elif i==1:
                        template.add('vars',item[0][2:]+'_STR='+repr(item[1]))

    

template.add('code',"")
template.add('code',"##")
template.add('code',"##  Code")
template.add('code',"##")
template.add('code',"")


###
###  Template identifyer for python 2/3
###

max_len=0
lengths={}
for item in words:
    word_length=len(item[1])
    if word_length>max_len: 
        max_len=word_length
        lengths[max_len]=max_len
        
if_type="if  "

# For debugging, adds the needle and length to stdout
# template.add("get_intermediate_code_2","    print(text,text_length)")
# template.add("get_intermediate_code_3","    print(text,text_length)")

for length in range(max_len,0,-1):

    found_word=None
    for item in words:
        word_length=len(item[1])
        if item[2]!=1 or word_length!=length:    
            continue
        found_word=True

    if found_word==None: continue
    template.add("get_intermediate_code_2","    "+if_type+" text_length=="+str(length)+":")
    template.add("get_intermediate_code_3","    "+if_type+" text_length=="+str(length)+":")

    

    if_type="elif"
    sub_if_type="if  "

    for item in words:
        word_length=len(item[1])
        if item[0][0]=='N' or  item[0][0]=='A': continue
        if word_length!=length:    
            continue

        if item[2]==1:
            code=item[3]
            if isinstance(code,str)==True:
                code=item[4]
            statement1="        "+sub_if_type+" text_hash=="+"{0}".format(hash(item[1]))+": return "+"0x{0:04X}".format(code)
            statement2="        "+sub_if_type+" text=="+repr (item[1]) + ": return "+"0x{0:04X}".format(code)
            template.add("get_intermediate_code_2",statement1)            
            template.add("get_intermediate_code_3",statement2)
            sub_if_type="elif"

# end build loop
        

template.build()
template.dump()